// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v4.23.4
// source: mikros/extensions/extensions.proto

package extensions

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuthenticationMode int32

const (
	AuthenticationMode_AUTHENTICATION_MODE_NO_AUTH AuthenticationMode = 0
	AuthenticationMode_AUTHENTICATION_MODE_SCOPED  AuthenticationMode = 1
)

// Enum value maps for AuthenticationMode.
var (
	AuthenticationMode_name = map[int32]string{
		0: "AUTHENTICATION_MODE_NO_AUTH",
		1: "AUTHENTICATION_MODE_SCOPED",
	}
	AuthenticationMode_value = map[string]int32{
		"AUTHENTICATION_MODE_NO_AUTH": 0,
		"AUTHENTICATION_MODE_SCOPED":  1,
	}
)

func (x AuthenticationMode) Enum() *AuthenticationMode {
	p := new(AuthenticationMode)
	*p = x
	return p
}

func (x AuthenticationMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthenticationMode) Descriptor() protoreflect.EnumDescriptor {
	return file_mikros_extensions_extensions_proto_enumTypes[0].Descriptor()
}

func (AuthenticationMode) Type() protoreflect.EnumType {
	return &file_mikros_extensions_extensions_proto_enumTypes[0]
}

func (x AuthenticationMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *AuthenticationMode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = AuthenticationMode(num)
	return nil
}

// Deprecated: Use AuthenticationMode.Descriptor instead.
func (AuthenticationMode) EnumDescriptor() ([]byte, []int) {
	return file_mikros_extensions_extensions_proto_rawDescGZIP(), []int{0}
}

type FieldValidatorRule int32

const (
	FieldValidatorRule_FIELD_VALIDATOR_RULE_UNSPECIFIED         FieldValidatorRule = 0
	FieldValidatorRule_FIELD_VALIDATOR_RULE_CUSTOM              FieldValidatorRule = 1
	FieldValidatorRule_FIELD_VALIDATOR_RULE_ID                  FieldValidatorRule = 2
	FieldValidatorRule_FIELD_VALIDATOR_RULE_EMAIL               FieldValidatorRule = 3
	FieldValidatorRule_FIELD_VALIDATOR_RULE_DATETIME            FieldValidatorRule = 4
	FieldValidatorRule_FIELD_VALIDATOR_RULE_PERSON_DOCUMENT     FieldValidatorRule = 5
	FieldValidatorRule_FIELD_VALIDATOR_RULE_ENTERPRISE_DOCUMENT FieldValidatorRule = 6
	FieldValidatorRule_FIELD_VALIDATOR_RULE_DOCUMENT            FieldValidatorRule = 7
	FieldValidatorRule_FIELD_VALIDATOR_RULE_PHONE               FieldValidatorRule = 8
	FieldValidatorRule_FIELD_VALIDATOR_RULE_PASSWORD            FieldValidatorRule = 9
	FieldValidatorRule_FIELD_VALIDATOR_RULE_REGEX               FieldValidatorRule = 10
)

// Enum value maps for FieldValidatorRule.
var (
	FieldValidatorRule_name = map[int32]string{
		0:  "FIELD_VALIDATOR_RULE_UNSPECIFIED",
		1:  "FIELD_VALIDATOR_RULE_CUSTOM",
		2:  "FIELD_VALIDATOR_RULE_ID",
		3:  "FIELD_VALIDATOR_RULE_EMAIL",
		4:  "FIELD_VALIDATOR_RULE_DATETIME",
		5:  "FIELD_VALIDATOR_RULE_PERSON_DOCUMENT",
		6:  "FIELD_VALIDATOR_RULE_ENTERPRISE_DOCUMENT",
		7:  "FIELD_VALIDATOR_RULE_DOCUMENT",
		8:  "FIELD_VALIDATOR_RULE_PHONE",
		9:  "FIELD_VALIDATOR_RULE_PASSWORD",
		10: "FIELD_VALIDATOR_RULE_REGEX",
	}
	FieldValidatorRule_value = map[string]int32{
		"FIELD_VALIDATOR_RULE_UNSPECIFIED":         0,
		"FIELD_VALIDATOR_RULE_CUSTOM":              1,
		"FIELD_VALIDATOR_RULE_ID":                  2,
		"FIELD_VALIDATOR_RULE_EMAIL":               3,
		"FIELD_VALIDATOR_RULE_DATETIME":            4,
		"FIELD_VALIDATOR_RULE_PERSON_DOCUMENT":     5,
		"FIELD_VALIDATOR_RULE_ENTERPRISE_DOCUMENT": 6,
		"FIELD_VALIDATOR_RULE_DOCUMENT":            7,
		"FIELD_VALIDATOR_RULE_PHONE":               8,
		"FIELD_VALIDATOR_RULE_PASSWORD":            9,
		"FIELD_VALIDATOR_RULE_REGEX":               10,
	}
)

func (x FieldValidatorRule) Enum() *FieldValidatorRule {
	p := new(FieldValidatorRule)
	*p = x
	return p
}

func (x FieldValidatorRule) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldValidatorRule) Descriptor() protoreflect.EnumDescriptor {
	return file_mikros_extensions_extensions_proto_enumTypes[1].Descriptor()
}

func (FieldValidatorRule) Type() protoreflect.EnumType {
	return &file_mikros_extensions_extensions_proto_enumTypes[1]
}

func (x FieldValidatorRule) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *FieldValidatorRule) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = FieldValidatorRule(num)
	return nil
}

// Deprecated: Use FieldValidatorRule.Descriptor instead.
func (FieldValidatorRule) EnumDescriptor() ([]byte, []int) {
	return file_mikros_extensions_extensions_proto_rawDescGZIP(), []int{1}
}

type NamingMode int32

const (
	NamingMode_NAMING_MODE_SNAKE_CASE NamingMode = 0
	NamingMode_NAMING_MODE_CAMEL_CASE NamingMode = 1
)

// Enum value maps for NamingMode.
var (
	NamingMode_name = map[int32]string{
		0: "NAMING_MODE_SNAKE_CASE",
		1: "NAMING_MODE_CAMEL_CASE",
	}
	NamingMode_value = map[string]int32{
		"NAMING_MODE_SNAKE_CASE": 0,
		"NAMING_MODE_CAMEL_CASE": 1,
	}
)

func (x NamingMode) Enum() *NamingMode {
	p := new(NamingMode)
	*p = x
	return p
}

func (x NamingMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NamingMode) Descriptor() protoreflect.EnumDescriptor {
	return file_mikros_extensions_extensions_proto_enumTypes[2].Descriptor()
}

func (NamingMode) Type() protoreflect.EnumType {
	return &file_mikros_extensions_extensions_proto_enumTypes[2]
}

func (x NamingMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *NamingMode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = NamingMode(num)
	return nil
}

// Deprecated: Use NamingMode.Descriptor instead.
func (NamingMode) EnumDescriptor() ([]byte, []int) {
	return file_mikros_extensions_extensions_proto_rawDescGZIP(), []int{2}
}

type HttpMethodExtensions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header         []string                      `protobuf:"bytes,1,rep,name=header" json:"header,omitempty"`
	Authentication *HttpAuthenticationExtensions `protobuf:"bytes,2,opt,name=authentication" json:"authentication,omitempty"`
}

func (x *HttpMethodExtensions) Reset() {
	*x = HttpMethodExtensions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mikros_extensions_extensions_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpMethodExtensions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpMethodExtensions) ProtoMessage() {}

func (x *HttpMethodExtensions) ProtoReflect() protoreflect.Message {
	mi := &file_mikros_extensions_extensions_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpMethodExtensions.ProtoReflect.Descriptor instead.
func (*HttpMethodExtensions) Descriptor() ([]byte, []int) {
	return file_mikros_extensions_extensions_proto_rawDescGZIP(), []int{0}
}

func (x *HttpMethodExtensions) GetHeader() []string {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *HttpMethodExtensions) GetAuthentication() *HttpAuthenticationExtensions {
	if x != nil {
		return x.Authentication
	}
	return nil
}

type HttpAuthenticationExtensions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode  *AuthenticationMode `protobuf:"varint,1,req,name=mode,enum=mikros.extensions.AuthenticationMode" json:"mode,omitempty"`
	Scope []string            `protobuf:"bytes,2,rep,name=scope" json:"scope,omitempty"`
}

func (x *HttpAuthenticationExtensions) Reset() {
	*x = HttpAuthenticationExtensions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mikros_extensions_extensions_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpAuthenticationExtensions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpAuthenticationExtensions) ProtoMessage() {}

func (x *HttpAuthenticationExtensions) ProtoReflect() protoreflect.Message {
	mi := &file_mikros_extensions_extensions_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpAuthenticationExtensions.ProtoReflect.Descriptor instead.
func (*HttpAuthenticationExtensions) Descriptor() ([]byte, []int) {
	return file_mikros_extensions_extensions_proto_rawDescGZIP(), []int{1}
}

func (x *HttpAuthenticationExtensions) GetMode() AuthenticationMode {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return AuthenticationMode_AUTHENTICATION_MODE_NO_AUTH
}

func (x *HttpAuthenticationExtensions) GetScope() []string {
	if x != nil {
		return x.Scope
	}
	return nil
}

type EnumApiExtensions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sets that the enum is of bit flag kind, which will provide an API to use
	// its value as bits for uin64 variables.
	Bitflag *bool `protobuf:"varint,1,opt,name=bitflag" json:"bitflag,omitempty"`
}

func (x *EnumApiExtensions) Reset() {
	*x = EnumApiExtensions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mikros_extensions_extensions_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumApiExtensions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumApiExtensions) ProtoMessage() {}

func (x *EnumApiExtensions) ProtoReflect() protoreflect.Message {
	mi := &file_mikros_extensions_extensions_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumApiExtensions.ProtoReflect.Descriptor instead.
func (*EnumApiExtensions) Descriptor() ([]byte, []int) {
	return file_mikros_extensions_extensions_proto_rawDescGZIP(), []int{2}
}

func (x *EnumApiExtensions) GetBitflag() bool {
	if x != nil && x.Bitflag != nil {
		return *x.Bitflag
	}
	return false
}

type EnumEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *EnumEntry) Reset() {
	*x = EnumEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mikros_extensions_extensions_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumEntry) ProtoMessage() {}

func (x *EnumEntry) ProtoReflect() protoreflect.Message {
	mi := &file_mikros_extensions_extensions_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumEntry.ProtoReflect.Descriptor instead.
func (*EnumEntry) Descriptor() ([]byte, []int) {
	return file_mikros_extensions_extensions_proto_rawDescGZIP(), []int{3}
}

func (x *EnumEntry) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type FieldDomainOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Tag      *string `protobuf:"bytes,2,opt,name=tag" json:"tag,omitempty"`
	Optional *bool   `protobuf:"varint,3,opt,name=optional" json:"optional,omitempty"`
}

func (x *FieldDomainOptions) Reset() {
	*x = FieldDomainOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mikros_extensions_extensions_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldDomainOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldDomainOptions) ProtoMessage() {}

func (x *FieldDomainOptions) ProtoReflect() protoreflect.Message {
	mi := &file_mikros_extensions_extensions_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldDomainOptions.ProtoReflect.Descriptor instead.
func (*FieldDomainOptions) Descriptor() ([]byte, []int) {
	return file_mikros_extensions_extensions_proto_rawDescGZIP(), []int{4}
}

func (x *FieldDomainOptions) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *FieldDomainOptions) GetTag() string {
	if x != nil && x.Tag != nil {
		return *x.Tag
	}
	return ""
}

func (x *FieldDomainOptions) GetOptional() bool {
	if x != nil && x.Optional != nil {
		return *x.Optional
	}
	return false
}

type FieldDatabaseOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	AllowEmpty *bool   `protobuf:"varint,2,opt,name=allow_empty,json=allowEmpty" json:"allow_empty,omitempty"`
}

func (x *FieldDatabaseOptions) Reset() {
	*x = FieldDatabaseOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mikros_extensions_extensions_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldDatabaseOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldDatabaseOptions) ProtoMessage() {}

func (x *FieldDatabaseOptions) ProtoReflect() protoreflect.Message {
	mi := &file_mikros_extensions_extensions_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldDatabaseOptions.ProtoReflect.Descriptor instead.
func (*FieldDatabaseOptions) Descriptor() ([]byte, []int) {
	return file_mikros_extensions_extensions_proto_rawDescGZIP(), []int{5}
}

func (x *FieldDatabaseOptions) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *FieldDatabaseOptions) GetAllowEmpty() bool {
	if x != nil && x.AllowEmpty != nil {
		return *x.AllowEmpty
	}
	return false
}

type FieldInboundOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *FieldInboundOptions) Reset() {
	*x = FieldInboundOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mikros_extensions_extensions_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldInboundOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldInboundOptions) ProtoMessage() {}

func (x *FieldInboundOptions) ProtoReflect() protoreflect.Message {
	mi := &file_mikros_extensions_extensions_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldInboundOptions.ProtoReflect.Descriptor instead.
func (*FieldInboundOptions) Descriptor() ([]byte, []int) {
	return file_mikros_extensions_extensions_proto_rawDescGZIP(), []int{6}
}

func (x *FieldInboundOptions) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type FieldOutboundOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       *string               `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Hide       *bool                 `protobuf:"varint,2,opt,name=hide" json:"hide,omitempty"`
	Bitflag    *OutboundBitflagField `protobuf:"bytes,3,opt,name=bitflag" json:"bitflag,omitempty"`
	AllowEmpty *bool                 `protobuf:"varint,4,opt,name=allow_empty,json=allowEmpty" json:"allow_empty,omitempty"`
}

func (x *FieldOutboundOptions) Reset() {
	*x = FieldOutboundOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mikros_extensions_extensions_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldOutboundOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldOutboundOptions) ProtoMessage() {}

func (x *FieldOutboundOptions) ProtoReflect() protoreflect.Message {
	mi := &file_mikros_extensions_extensions_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldOutboundOptions.ProtoReflect.Descriptor instead.
func (*FieldOutboundOptions) Descriptor() ([]byte, []int) {
	return file_mikros_extensions_extensions_proto_rawDescGZIP(), []int{7}
}

func (x *FieldOutboundOptions) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *FieldOutboundOptions) GetHide() bool {
	if x != nil && x.Hide != nil {
		return *x.Hide
	}
	return false
}

func (x *FieldOutboundOptions) GetBitflag() *OutboundBitflagField {
	if x != nil {
		return x.Bitflag
	}
	return nil
}

func (x *FieldOutboundOptions) GetAllowEmpty() bool {
	if x != nil && x.AllowEmpty != nil {
		return *x.AllowEmpty
	}
	return false
}

type OutboundBitflagField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Values must point to a valid enum name which holds all the values that the
	// bitflag represents.
	Values *string `protobuf:"bytes,1,req,name=values" json:"values,omitempty"`
	// Sets an optional prefix string that is present in all values that represents
	// the bitflag.
	Prefix *string `protobuf:"bytes,2,req,name=prefix" json:"prefix,omitempty"`
}

func (x *OutboundBitflagField) Reset() {
	*x = OutboundBitflagField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mikros_extensions_extensions_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutboundBitflagField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutboundBitflagField) ProtoMessage() {}

func (x *OutboundBitflagField) ProtoReflect() protoreflect.Message {
	mi := &file_mikros_extensions_extensions_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutboundBitflagField.ProtoReflect.Descriptor instead.
func (*OutboundBitflagField) Descriptor() ([]byte, []int) {
	return file_mikros_extensions_extensions_proto_rawDescGZIP(), []int{8}
}

func (x *OutboundBitflagField) GetValues() string {
	if x != nil && x.Values != nil {
		return *x.Values
	}
	return ""
}

func (x *OutboundBitflagField) GetPrefix() string {
	if x != nil && x.Prefix != nil {
		return *x.Prefix
	}
	return ""
}

type FieldValidateOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rule            *FieldValidatorRule `protobuf:"varint,1,opt,name=rule,enum=mikros.extensions.FieldValidatorRule" json:"rule,omitempty"`
	RuleArgs        []string            `protobuf:"bytes,2,rep,name=rule_args,json=ruleArgs" json:"rule_args,omitempty"`
	CustomRule      *string             `protobuf:"bytes,3,opt,name=custom_rule,json=customRule" json:"custom_rule,omitempty"`
	Required        *bool               `protobuf:"varint,4,opt,name=required" json:"required,omitempty"`
	Min             *int32              `protobuf:"varint,5,opt,name=min" json:"min,omitempty"`
	Max             *int32              `protobuf:"varint,6,opt,name=max" json:"max,omitempty"`
	MaxLength       *int32              `protobuf:"varint,7,opt,name=max_length,json=maxLength" json:"max_length,omitempty"`
	Dive            *bool               `protobuf:"varint,8,opt,name=dive" json:"dive,omitempty"`
	RequiredIf      *string             `protobuf:"bytes,9,opt,name=required_if,json=requiredIf" json:"required_if,omitempty"`
	RequiredIfNot   *string             `protobuf:"bytes,10,opt,name=required_if_not,json=requiredIfNot" json:"required_if_not,omitempty"`
	RequiredWith    *string             `protobuf:"bytes,11,opt,name=required_with,json=requiredWith" json:"required_with,omitempty"`
	RequiredWithout *string             `protobuf:"bytes,12,opt,name=required_without,json=requiredWithout" json:"required_without,omitempty"`
	RequiredAll     *string             `protobuf:"bytes,13,opt,name=required_all,json=requiredAll" json:"required_all,omitempty"`
	RequiredAny     *string             `protobuf:"bytes,14,opt,name=required_any,json=requiredAny" json:"required_any,omitempty"`
	ErrorMessage    *string             `protobuf:"bytes,15,opt,name=error_message,json=errorMessage" json:"error_message,omitempty"`
}

func (x *FieldValidateOptions) Reset() {
	*x = FieldValidateOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mikros_extensions_extensions_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldValidateOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldValidateOptions) ProtoMessage() {}

func (x *FieldValidateOptions) ProtoReflect() protoreflect.Message {
	mi := &file_mikros_extensions_extensions_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldValidateOptions.ProtoReflect.Descriptor instead.
func (*FieldValidateOptions) Descriptor() ([]byte, []int) {
	return file_mikros_extensions_extensions_proto_rawDescGZIP(), []int{9}
}

func (x *FieldValidateOptions) GetRule() FieldValidatorRule {
	if x != nil && x.Rule != nil {
		return *x.Rule
	}
	return FieldValidatorRule_FIELD_VALIDATOR_RULE_UNSPECIFIED
}

func (x *FieldValidateOptions) GetRuleArgs() []string {
	if x != nil {
		return x.RuleArgs
	}
	return nil
}

func (x *FieldValidateOptions) GetCustomRule() string {
	if x != nil && x.CustomRule != nil {
		return *x.CustomRule
	}
	return ""
}

func (x *FieldValidateOptions) GetRequired() bool {
	if x != nil && x.Required != nil {
		return *x.Required
	}
	return false
}

func (x *FieldValidateOptions) GetMin() int32 {
	if x != nil && x.Min != nil {
		return *x.Min
	}
	return 0
}

func (x *FieldValidateOptions) GetMax() int32 {
	if x != nil && x.Max != nil {
		return *x.Max
	}
	return 0
}

func (x *FieldValidateOptions) GetMaxLength() int32 {
	if x != nil && x.MaxLength != nil {
		return *x.MaxLength
	}
	return 0
}

func (x *FieldValidateOptions) GetDive() bool {
	if x != nil && x.Dive != nil {
		return *x.Dive
	}
	return false
}

func (x *FieldValidateOptions) GetRequiredIf() string {
	if x != nil && x.RequiredIf != nil {
		return *x.RequiredIf
	}
	return ""
}

func (x *FieldValidateOptions) GetRequiredIfNot() string {
	if x != nil && x.RequiredIfNot != nil {
		return *x.RequiredIfNot
	}
	return ""
}

func (x *FieldValidateOptions) GetRequiredWith() string {
	if x != nil && x.RequiredWith != nil {
		return *x.RequiredWith
	}
	return ""
}

func (x *FieldValidateOptions) GetRequiredWithout() string {
	if x != nil && x.RequiredWithout != nil {
		return *x.RequiredWithout
	}
	return ""
}

func (x *FieldValidateOptions) GetRequiredAll() string {
	if x != nil && x.RequiredAll != nil {
		return *x.RequiredAll
	}
	return ""
}

func (x *FieldValidateOptions) GetRequiredAny() string {
	if x != nil && x.RequiredAny != nil {
		return *x.RequiredAny
	}
	return ""
}

func (x *FieldValidateOptions) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

type MessageDomainExpansionOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DontExport *bool `protobuf:"varint,1,opt,name=dont_export,json=dontExport" json:"dont_export,omitempty"`
}

func (x *MessageDomainExpansionOptions) Reset() {
	*x = MessageDomainExpansionOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mikros_extensions_extensions_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageDomainExpansionOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageDomainExpansionOptions) ProtoMessage() {}

func (x *MessageDomainExpansionOptions) ProtoReflect() protoreflect.Message {
	mi := &file_mikros_extensions_extensions_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageDomainExpansionOptions.ProtoReflect.Descriptor instead.
func (*MessageDomainExpansionOptions) Descriptor() ([]byte, []int) {
	return file_mikros_extensions_extensions_proto_rawDescGZIP(), []int{10}
}

func (x *MessageDomainExpansionOptions) GetDontExport() bool {
	if x != nil && x.DontExport != nil {
		return *x.DontExport
	}
	return false
}

type MessageWireExpansionOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomCode []*WireCodeExpansion `protobuf:"bytes,1,rep,name=custom_code,json=customCode" json:"custom_code,omitempty"`
}

func (x *MessageWireExpansionOptions) Reset() {
	*x = MessageWireExpansionOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mikros_extensions_extensions_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageWireExpansionOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageWireExpansionOptions) ProtoMessage() {}

func (x *MessageWireExpansionOptions) ProtoReflect() protoreflect.Message {
	mi := &file_mikros_extensions_extensions_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageWireExpansionOptions.ProtoReflect.Descriptor instead.
func (*MessageWireExpansionOptions) Descriptor() ([]byte, []int) {
	return file_mikros_extensions_extensions_proto_rawDescGZIP(), []int{11}
}

func (x *MessageWireExpansionOptions) GetCustomCode() []*WireCodeExpansion {
	if x != nil {
		return x.CustomCode
	}
	return nil
}

type WireCodeExpansion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature *string                    `protobuf:"bytes,1,req,name=signature" json:"signature,omitempty"`
	Body      *string                    `protobuf:"bytes,2,req,name=body" json:"body,omitempty"`
	Import    []*WireCodeExpansionImport `protobuf:"bytes,3,rep,name=import" json:"import,omitempty"`
}

func (x *WireCodeExpansion) Reset() {
	*x = WireCodeExpansion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mikros_extensions_extensions_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WireCodeExpansion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WireCodeExpansion) ProtoMessage() {}

func (x *WireCodeExpansion) ProtoReflect() protoreflect.Message {
	mi := &file_mikros_extensions_extensions_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WireCodeExpansion.ProtoReflect.Descriptor instead.
func (*WireCodeExpansion) Descriptor() ([]byte, []int) {
	return file_mikros_extensions_extensions_proto_rawDescGZIP(), []int{12}
}

func (x *WireCodeExpansion) GetSignature() string {
	if x != nil && x.Signature != nil {
		return *x.Signature
	}
	return ""
}

func (x *WireCodeExpansion) GetBody() string {
	if x != nil && x.Body != nil {
		return *x.Body
	}
	return ""
}

func (x *WireCodeExpansion) GetImport() []*WireCodeExpansionImport {
	if x != nil {
		return x.Import
	}
	return nil
}

type WireCodeExpansionImport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alias *string `protobuf:"bytes,1,opt,name=alias" json:"alias,omitempty"`
	Name  *string `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
}

func (x *WireCodeExpansionImport) Reset() {
	*x = WireCodeExpansionImport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mikros_extensions_extensions_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WireCodeExpansionImport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WireCodeExpansionImport) ProtoMessage() {}

func (x *WireCodeExpansionImport) ProtoReflect() protoreflect.Message {
	mi := &file_mikros_extensions_extensions_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WireCodeExpansionImport.ProtoReflect.Descriptor instead.
func (*WireCodeExpansionImport) Descriptor() ([]byte, []int) {
	return file_mikros_extensions_extensions_proto_rawDescGZIP(), []int{13}
}

func (x *WireCodeExpansionImport) GetAlias() string {
	if x != nil && x.Alias != nil {
		return *x.Alias
	}
	return ""
}

func (x *WireCodeExpansionImport) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type MessageInboundOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamingMode *NamingMode `protobuf:"varint,1,opt,name=naming_mode,json=namingMode,enum=mikros.extensions.NamingMode" json:"naming_mode,omitempty"`
}

func (x *MessageInboundOptions) Reset() {
	*x = MessageInboundOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mikros_extensions_extensions_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageInboundOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageInboundOptions) ProtoMessage() {}

func (x *MessageInboundOptions) ProtoReflect() protoreflect.Message {
	mi := &file_mikros_extensions_extensions_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageInboundOptions.ProtoReflect.Descriptor instead.
func (*MessageInboundOptions) Descriptor() ([]byte, []int) {
	return file_mikros_extensions_extensions_proto_rawDescGZIP(), []int{14}
}

func (x *MessageInboundOptions) GetNamingMode() NamingMode {
	if x != nil && x.NamingMode != nil {
		return *x.NamingMode
	}
	return NamingMode_NAMING_MODE_SNAKE_CASE
}

type MessageOutboundOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Export     *bool       `protobuf:"varint,1,opt,name=export" json:"export,omitempty"`
	NamingMode *NamingMode `protobuf:"varint,2,opt,name=naming_mode,json=namingMode,enum=mikros.extensions.NamingMode" json:"naming_mode,omitempty"`
}

func (x *MessageOutboundOptions) Reset() {
	*x = MessageOutboundOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mikros_extensions_extensions_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageOutboundOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageOutboundOptions) ProtoMessage() {}

func (x *MessageOutboundOptions) ProtoReflect() protoreflect.Message {
	mi := &file_mikros_extensions_extensions_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageOutboundOptions.ProtoReflect.Descriptor instead.
func (*MessageOutboundOptions) Descriptor() ([]byte, []int) {
	return file_mikros_extensions_extensions_proto_rawDescGZIP(), []int{15}
}

func (x *MessageOutboundOptions) GetExport() bool {
	if x != nil && x.Export != nil {
		return *x.Export
	}
	return false
}

func (x *MessageOutboundOptions) GetNamingMode() NamingMode {
	if x != nil && x.NamingMode != nil {
		return *x.NamingMode
	}
	return NamingMode_NAMING_MODE_SNAKE_CASE
}

var file_mikros_extensions_extensions_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*HttpMethodExtensions)(nil),
		Field:         85042,
		Name:          "mikros.extensions.http",
		Tag:           "bytes,85042,opt,name=http",
		Filename:      "mikros/extensions/extensions.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumOptions)(nil),
		ExtensionType: (*EnumApiExtensions)(nil),
		Field:         85042,
		Name:          "mikros.extensions.api",
		Tag:           "bytes,85042,opt,name=api",
		Filename:      "mikros/extensions/extensions.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*EnumEntry)(nil),
		Field:         85042,
		Name:          "mikros.extensions.entry",
		Tag:           "bytes,85042,opt,name=entry",
		Filename:      "mikros/extensions/extensions.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*FieldDomainOptions)(nil),
		Field:         85042,
		Name:          "mikros.extensions.domain",
		Tag:           "bytes,85042,opt,name=domain",
		Filename:      "mikros/extensions/extensions.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*FieldDatabaseOptions)(nil),
		Field:         85043,
		Name:          "mikros.extensions.database",
		Tag:           "bytes,85043,opt,name=database",
		Filename:      "mikros/extensions/extensions.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*FieldInboundOptions)(nil),
		Field:         85044,
		Name:          "mikros.extensions.inbound",
		Tag:           "bytes,85044,opt,name=inbound",
		Filename:      "mikros/extensions/extensions.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*FieldOutboundOptions)(nil),
		Field:         85045,
		Name:          "mikros.extensions.outbound",
		Tag:           "bytes,85045,opt,name=outbound",
		Filename:      "mikros/extensions/extensions.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*FieldValidateOptions)(nil),
		Field:         85046,
		Name:          "mikros.extensions.validate",
		Tag:           "bytes,85046,opt,name=validate",
		Filename:      "mikros/extensions/extensions.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*MessageDomainExpansionOptions)(nil),
		Field:         85042,
		Name:          "mikros.extensions.domain_expansion",
		Tag:           "bytes,85042,opt,name=domain_expansion",
		Filename:      "mikros/extensions/extensions.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*MessageWireExpansionOptions)(nil),
		Field:         85043,
		Name:          "mikros.extensions.wire_expansion",
		Tag:           "bytes,85043,opt,name=wire_expansion",
		Filename:      "mikros/extensions/extensions.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*MessageInboundOptions)(nil),
		Field:         85044,
		Name:          "mikros.extensions.inbound_options",
		Tag:           "bytes,85044,opt,name=inbound_options",
		Filename:      "mikros/extensions/extensions.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*MessageOutboundOptions)(nil),
		Field:         85045,
		Name:          "mikros.extensions.outbound_options",
		Tag:           "bytes,85045,opt,name=outbound_options",
		Filename:      "mikros/extensions/extensions.proto",
	},
}

// Extension fields to descriptorpb.MethodOptions.
var (
	// optional mikros.extensions.HttpMethodExtensions http = 85042;
	E_Http = &file_mikros_extensions_extensions_proto_extTypes[0]
)

// Extension fields to descriptorpb.EnumOptions.
var (
	// optional mikros.extensions.EnumApiExtensions api = 85042;
	E_Api = &file_mikros_extensions_extensions_proto_extTypes[1]
)

// Extension fields to descriptorpb.EnumValueOptions.
var (
	// optional mikros.extensions.EnumEntry entry = 85042;
	E_Entry = &file_mikros_extensions_extensions_proto_extTypes[2]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional mikros.extensions.FieldDomainOptions domain = 85042;
	E_Domain = &file_mikros_extensions_extensions_proto_extTypes[3]
	// optional mikros.extensions.FieldDatabaseOptions database = 85043;
	E_Database = &file_mikros_extensions_extensions_proto_extTypes[4]
	// optional mikros.extensions.FieldInboundOptions inbound = 85044;
	E_Inbound = &file_mikros_extensions_extensions_proto_extTypes[5]
	// optional mikros.extensions.FieldOutboundOptions outbound = 85045;
	E_Outbound = &file_mikros_extensions_extensions_proto_extTypes[6]
	// optional mikros.extensions.FieldValidateOptions validate = 85046;
	E_Validate = &file_mikros_extensions_extensions_proto_extTypes[7]
)

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional mikros.extensions.MessageDomainExpansionOptions domain_expansion = 85042;
	E_DomainExpansion = &file_mikros_extensions_extensions_proto_extTypes[8]
	// optional mikros.extensions.MessageWireExpansionOptions wire_expansion = 85043;
	E_WireExpansion = &file_mikros_extensions_extensions_proto_extTypes[9]
	// optional mikros.extensions.MessageInboundOptions inbound_options = 85044;
	E_InboundOptions = &file_mikros_extensions_extensions_proto_extTypes[10]
	// optional mikros.extensions.MessageOutboundOptions outbound_options = 85045;
	E_OutboundOptions = &file_mikros_extensions_extensions_proto_extTypes[11]
)

var File_mikros_extensions_extensions_proto protoreflect.FileDescriptor

var file_mikros_extensions_extensions_proto_rawDesc = []byte{
	0x0a, 0x22, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x87, 0x01, 0x0a, 0x14, 0x48, 0x74,
	0x74, 0x70, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x57, 0x0a, 0x0e, 0x61, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x6f, 0x0a, 0x1c, 0x48, 0x74, 0x74, 0x70, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x39, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x0e, 0x32, 0x25, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x22, 0x2d, 0x0a, 0x11, 0x45, 0x6e, 0x75, 0x6d, 0x41, 0x70, 0x69, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x69, 0x74,
	0x66, 0x6c, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x62, 0x69, 0x74, 0x66,
	0x6c, 0x61, 0x67, 0x22, 0x1f, 0x0a, 0x09, 0x45, 0x6e, 0x75, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x56, 0x0a, 0x12, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67,
	0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x22, 0x4b, 0x0a, 0x14,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x5f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x29, 0x0a, 0x13, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa2, 0x01, 0x0a, 0x14, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x75,
	0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x68, 0x69, 0x64, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x62, 0x69, 0x74, 0x66, 0x6c, 0x61, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2e,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x75, 0x74, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x42, 0x69, 0x74, 0x66, 0x6c, 0x61, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52,
	0x07, 0x62, 0x69, 0x74, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x5f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x46, 0x0a, 0x14, 0x4f, 0x75, 0x74,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x69, 0x74, 0x66, 0x6c, 0x61, 0x67, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x22, 0x86, 0x04, 0x0a, 0x14, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x39, 0x0a, 0x04, 0x72, 0x75,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f,
	0x73, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x04, 0x72, 0x75, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x61, 0x72,
	0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x41, 0x72,
	0x67, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x72, 0x75, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52,
	0x75, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x69,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x6d, 0x61, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x4c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x69, 0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x64, 0x69, 0x76, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x5f, 0x69, 0x66, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x49, 0x66, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x5f, 0x69, 0x66, 0x5f, 0x6e, 0x6f, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x49, 0x66, 0x4e, 0x6f, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x77, 0x69, 0x74, 0x68,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x57, 0x69, 0x74, 0x68, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x5f, 0x77, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x6c, 0x6c, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x41,
	0x6c, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x61,
	0x6e, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x41, 0x6e, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x40, 0x0a, 0x1d, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x45, 0x78, 0x70, 0x61, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x64,
	0x6f, 0x6e, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x64, 0x6f, 0x6e, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x64, 0x0a, 0x1b,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x57, 0x69, 0x72, 0x65, 0x45, 0x78, 0x70, 0x61, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x45, 0x0a, 0x0b, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x57, 0x69, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x45, 0x78, 0x70,
	0x61, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x11, 0x57, 0x69, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x45,
	0x78, 0x70, 0x61, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x42, 0x0a, 0x06, 0x69, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x69, 0x6b,
	0x72, 0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x57,
	0x69, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x06, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x43,
	0x0a, 0x17, 0x57, 0x69, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x57, 0x0a, 0x15, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3e, 0x0a, 0x0b,
	0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1d, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x70, 0x0a, 0x16,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x3e,
	0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x6f,
	0x64, 0x65, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x2a, 0x55,
	0x0a, 0x12, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49,
	0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x5f, 0x41,
	0x55, 0x54, 0x48, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54,
	0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x43, 0x4f,
	0x50, 0x45, 0x44, 0x10, 0x01, 0x2a, 0x99, 0x03, 0x0a, 0x12, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x20,
	0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x4f, 0x52, 0x5f,
	0x52, 0x55, 0x4c, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x52, 0x55, 0x4c, 0x45, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f,
	0x4d, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x52, 0x55, 0x4c, 0x45, 0x5f, 0x49, 0x44, 0x10, 0x02,
	0x12, 0x1e, 0x0a, 0x1a, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41,
	0x54, 0x4f, 0x52, 0x5f, 0x52, 0x55, 0x4c, 0x45, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x03,
	0x12, 0x21, 0x0a, 0x1d, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41,
	0x54, 0x4f, 0x52, 0x5f, 0x52, 0x55, 0x4c, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x54, 0x49, 0x4d,
	0x45, 0x10, 0x04, 0x12, 0x28, 0x0a, 0x24, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x52, 0x55, 0x4c, 0x45, 0x5f, 0x50, 0x45, 0x52, 0x53,
	0x4f, 0x4e, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x05, 0x12, 0x2c, 0x0a,
	0x28, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x4f, 0x52,
	0x5f, 0x52, 0x55, 0x4c, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x50, 0x52, 0x49, 0x53, 0x45,
	0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x06, 0x12, 0x21, 0x0a, 0x1d, 0x46,
	0x49, 0x45, 0x4c, 0x44, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x52,
	0x55, 0x4c, 0x45, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x07, 0x12, 0x1e,
	0x0a, 0x1a, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x4f,
	0x52, 0x5f, 0x52, 0x55, 0x4c, 0x45, 0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x10, 0x08, 0x12, 0x21,
	0x0a, 0x1d, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x4f,
	0x52, 0x5f, 0x52, 0x55, 0x4c, 0x45, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x10,
	0x09, 0x12, 0x1e, 0x0a, 0x1a, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x41, 0x54, 0x4f, 0x52, 0x5f, 0x52, 0x55, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x47, 0x45, 0x58, 0x10,
	0x0a, 0x2a, 0x44, 0x0a, 0x0a, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x1a, 0x0a, 0x16, 0x4e, 0x41, 0x4d, 0x49, 0x4e, 0x47, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x53,
	0x4e, 0x41, 0x4b, 0x45, 0x5f, 0x43, 0x41, 0x53, 0x45, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x4e,
	0x41, 0x4d, 0x49, 0x4e, 0x47, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x41, 0x4d, 0x45, 0x4c,
	0x5f, 0x43, 0x41, 0x53, 0x45, 0x10, 0x01, 0x3a, 0x5d, 0x0a, 0x04, 0x68, 0x74, 0x74, 0x70, 0x12,
	0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0xb2, 0x98, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73,
	0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x48, 0x74, 0x74, 0x70,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x04, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x56, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x12, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb2, 0x98, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x41, 0x70, 0x69, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x03, 0x61, 0x70, 0x69, 0x3a, 0x57,
	0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb2, 0x98, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x3a, 0x5e, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0xb2, 0x98, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f,
	0x73, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x3a, 0x64, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0xb3, 0x98, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x69, 0x6b,
	0x72, 0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x3a, 0x61, 0x0a,
	0x07, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb4, 0x98, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x3a, 0x64, 0x0a, 0x08, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1d, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb5, 0x98, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x75, 0x74,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x08, 0x6f, 0x75,
	0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x3a, 0x64, 0x0a, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0xb6, 0x98, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x69, 0x6b, 0x72,
	0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x7e, 0x0a, 0x10,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0xb2, 0x98, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6d, 0x69, 0x6b, 0x72,
	0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x45, 0x78, 0x70, 0x61, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x78, 0x0a, 0x0e,
	0x77, 0x69, 0x72, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0xb3, 0x98, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73,
	0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x57, 0x69, 0x72, 0x65, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0d, 0x77, 0x69, 0x72, 0x65, 0x45, 0x78, 0x70,
	0x61, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x74, 0x0a, 0x0f, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb4, 0x98, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0e, 0x69, 0x6e,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x77, 0x0a, 0x10,
	0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0xb5, 0x98, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6d, 0x69, 0x6b, 0x72,
	0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x50, 0x5a, 0x4e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x73, 0x66, 0x72, 0x65, 0x69, 0x74, 0x61, 0x73, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2d,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6d, 0x69, 0x6b, 0x72, 0x6f,
	0x73, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x3b, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73,
}

var (
	file_mikros_extensions_extensions_proto_rawDescOnce sync.Once
	file_mikros_extensions_extensions_proto_rawDescData = file_mikros_extensions_extensions_proto_rawDesc
)

func file_mikros_extensions_extensions_proto_rawDescGZIP() []byte {
	file_mikros_extensions_extensions_proto_rawDescOnce.Do(func() {
		file_mikros_extensions_extensions_proto_rawDescData = protoimpl.X.CompressGZIP(file_mikros_extensions_extensions_proto_rawDescData)
	})
	return file_mikros_extensions_extensions_proto_rawDescData
}

var file_mikros_extensions_extensions_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_mikros_extensions_extensions_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_mikros_extensions_extensions_proto_goTypes = []interface{}{
	(AuthenticationMode)(0),               // 0: mikros.extensions.AuthenticationMode
	(FieldValidatorRule)(0),               // 1: mikros.extensions.FieldValidatorRule
	(NamingMode)(0),                       // 2: mikros.extensions.NamingMode
	(*HttpMethodExtensions)(nil),          // 3: mikros.extensions.HttpMethodExtensions
	(*HttpAuthenticationExtensions)(nil),  // 4: mikros.extensions.HttpAuthenticationExtensions
	(*EnumApiExtensions)(nil),             // 5: mikros.extensions.EnumApiExtensions
	(*EnumEntry)(nil),                     // 6: mikros.extensions.EnumEntry
	(*FieldDomainOptions)(nil),            // 7: mikros.extensions.FieldDomainOptions
	(*FieldDatabaseOptions)(nil),          // 8: mikros.extensions.FieldDatabaseOptions
	(*FieldInboundOptions)(nil),           // 9: mikros.extensions.FieldInboundOptions
	(*FieldOutboundOptions)(nil),          // 10: mikros.extensions.FieldOutboundOptions
	(*OutboundBitflagField)(nil),          // 11: mikros.extensions.OutboundBitflagField
	(*FieldValidateOptions)(nil),          // 12: mikros.extensions.FieldValidateOptions
	(*MessageDomainExpansionOptions)(nil), // 13: mikros.extensions.MessageDomainExpansionOptions
	(*MessageWireExpansionOptions)(nil),   // 14: mikros.extensions.MessageWireExpansionOptions
	(*WireCodeExpansion)(nil),             // 15: mikros.extensions.WireCodeExpansion
	(*WireCodeExpansionImport)(nil),       // 16: mikros.extensions.WireCodeExpansionImport
	(*MessageInboundOptions)(nil),         // 17: mikros.extensions.MessageInboundOptions
	(*MessageOutboundOptions)(nil),        // 18: mikros.extensions.MessageOutboundOptions
	(*descriptorpb.MethodOptions)(nil),    // 19: google.protobuf.MethodOptions
	(*descriptorpb.EnumOptions)(nil),      // 20: google.protobuf.EnumOptions
	(*descriptorpb.EnumValueOptions)(nil), // 21: google.protobuf.EnumValueOptions
	(*descriptorpb.FieldOptions)(nil),     // 22: google.protobuf.FieldOptions
	(*descriptorpb.MessageOptions)(nil),   // 23: google.protobuf.MessageOptions
}
var file_mikros_extensions_extensions_proto_depIdxs = []int32{
	4,  // 0: mikros.extensions.HttpMethodExtensions.authentication:type_name -> mikros.extensions.HttpAuthenticationExtensions
	0,  // 1: mikros.extensions.HttpAuthenticationExtensions.mode:type_name -> mikros.extensions.AuthenticationMode
	11, // 2: mikros.extensions.FieldOutboundOptions.bitflag:type_name -> mikros.extensions.OutboundBitflagField
	1,  // 3: mikros.extensions.FieldValidateOptions.rule:type_name -> mikros.extensions.FieldValidatorRule
	15, // 4: mikros.extensions.MessageWireExpansionOptions.custom_code:type_name -> mikros.extensions.WireCodeExpansion
	16, // 5: mikros.extensions.WireCodeExpansion.import:type_name -> mikros.extensions.WireCodeExpansionImport
	2,  // 6: mikros.extensions.MessageInboundOptions.naming_mode:type_name -> mikros.extensions.NamingMode
	2,  // 7: mikros.extensions.MessageOutboundOptions.naming_mode:type_name -> mikros.extensions.NamingMode
	19, // 8: mikros.extensions.http:extendee -> google.protobuf.MethodOptions
	20, // 9: mikros.extensions.api:extendee -> google.protobuf.EnumOptions
	21, // 10: mikros.extensions.entry:extendee -> google.protobuf.EnumValueOptions
	22, // 11: mikros.extensions.domain:extendee -> google.protobuf.FieldOptions
	22, // 12: mikros.extensions.database:extendee -> google.protobuf.FieldOptions
	22, // 13: mikros.extensions.inbound:extendee -> google.protobuf.FieldOptions
	22, // 14: mikros.extensions.outbound:extendee -> google.protobuf.FieldOptions
	22, // 15: mikros.extensions.validate:extendee -> google.protobuf.FieldOptions
	23, // 16: mikros.extensions.domain_expansion:extendee -> google.protobuf.MessageOptions
	23, // 17: mikros.extensions.wire_expansion:extendee -> google.protobuf.MessageOptions
	23, // 18: mikros.extensions.inbound_options:extendee -> google.protobuf.MessageOptions
	23, // 19: mikros.extensions.outbound_options:extendee -> google.protobuf.MessageOptions
	3,  // 20: mikros.extensions.http:type_name -> mikros.extensions.HttpMethodExtensions
	5,  // 21: mikros.extensions.api:type_name -> mikros.extensions.EnumApiExtensions
	6,  // 22: mikros.extensions.entry:type_name -> mikros.extensions.EnumEntry
	7,  // 23: mikros.extensions.domain:type_name -> mikros.extensions.FieldDomainOptions
	8,  // 24: mikros.extensions.database:type_name -> mikros.extensions.FieldDatabaseOptions
	9,  // 25: mikros.extensions.inbound:type_name -> mikros.extensions.FieldInboundOptions
	10, // 26: mikros.extensions.outbound:type_name -> mikros.extensions.FieldOutboundOptions
	12, // 27: mikros.extensions.validate:type_name -> mikros.extensions.FieldValidateOptions
	13, // 28: mikros.extensions.domain_expansion:type_name -> mikros.extensions.MessageDomainExpansionOptions
	14, // 29: mikros.extensions.wire_expansion:type_name -> mikros.extensions.MessageWireExpansionOptions
	17, // 30: mikros.extensions.inbound_options:type_name -> mikros.extensions.MessageInboundOptions
	18, // 31: mikros.extensions.outbound_options:type_name -> mikros.extensions.MessageOutboundOptions
	32, // [32:32] is the sub-list for method output_type
	32, // [32:32] is the sub-list for method input_type
	20, // [20:32] is the sub-list for extension type_name
	8,  // [8:20] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_mikros_extensions_extensions_proto_init() }
func file_mikros_extensions_extensions_proto_init() {
	if File_mikros_extensions_extensions_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mikros_extensions_extensions_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpMethodExtensions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mikros_extensions_extensions_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpAuthenticationExtensions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mikros_extensions_extensions_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumApiExtensions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mikros_extensions_extensions_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mikros_extensions_extensions_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldDomainOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mikros_extensions_extensions_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldDatabaseOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mikros_extensions_extensions_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldInboundOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mikros_extensions_extensions_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldOutboundOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mikros_extensions_extensions_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutboundBitflagField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mikros_extensions_extensions_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldValidateOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mikros_extensions_extensions_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageDomainExpansionOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mikros_extensions_extensions_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageWireExpansionOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mikros_extensions_extensions_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WireCodeExpansion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mikros_extensions_extensions_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WireCodeExpansionImport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mikros_extensions_extensions_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageInboundOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mikros_extensions_extensions_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageOutboundOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mikros_extensions_extensions_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   16,
			NumExtensions: 12,
			NumServices:   0,
		},
		GoTypes:           file_mikros_extensions_extensions_proto_goTypes,
		DependencyIndexes: file_mikros_extensions_extensions_proto_depIdxs,
		EnumInfos:         file_mikros_extensions_extensions_proto_enumTypes,
		MessageInfos:      file_mikros_extensions_extensions_proto_msgTypes,
		ExtensionInfos:    file_mikros_extensions_extensions_proto_extTypes,
	}.Build()
	File_mikros_extensions_extensions_proto = out.File
	file_mikros_extensions_extensions_proto_rawDesc = nil
	file_mikros_extensions_extensions_proto_goTypes = nil
	file_mikros_extensions_extensions_proto_depIdxs = nil
}
