syntax = "proto3";

package services.user;

option go_package = "examples/gen/go/services/user;user";

import "mikros/extensions/extensions.proto";
import "services/common/common.proto";

message UserWire {
  option (mikros.extensions.message_options) = {
    custom_api: {
      function: {
        import: {
          alias: "common"
          name: "examples/gen/go/services/common"
        }

        signature: "(u *UserWire) IsActive() bool"
        body: "return u.Status == common.Status_STATUS_ACTIVE"
      }

      function: {
        signature: "(u *UserWire) HasEmail() bool"
        body: "return u.Email != \"\""
      }
    }

    outbound: {
      export: true
      naming_mode: NAMING_MODE_SNAKE_CASE
    }
  };

  string id = 1 [(mikros.extensions.field_options) = {
    domain: {
      struct_tag: {
        name: "validate",
        value: "omitempty,min=10,max=42"
      }
      struct_tag: {
        name: "gorm",
        value: "primaryKey"
      }
    }
  }];

  string name = 2;
  common.Status status = 3;
  string email = 4;
  int32 age = 5;
}