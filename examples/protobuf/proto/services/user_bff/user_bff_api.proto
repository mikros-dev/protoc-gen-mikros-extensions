syntax = "proto3";

package services.user_bff;

option go_package = "examples/gen/go/services/user_bff;user_bff";

import "google/api/annotations.proto";
import "google/protobuf/struct.proto";
import "mikros/extensions/extensions.proto";
import "services/user/user.proto";

service UserBffService {
  option (mikros.extensions.service_options) = {
    authorization: {
      mode: AUTHORIZATION_MODE_CUSTOM
      custom_auth_name: "auth-scopes"
    }
  };

  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
    option (google.api.http) = {
      post: "/user-bff/v1/users/{name}"
      body: "email"
    };

    option (mikros.extensions.method_options) = {
      http: {
        auth_arg: "WRITE"
        header: "debug"
      }
    };
  }
}

message CreateUserRequest {
  option (mikros.extensions.message_options) = {
    inbound: {
      naming_mode: NAMING_MODE_SNAKE_CASE
    }
  };

  string name = 1 [(mikros.extensions.field_options) = {
    inbound: {name:"NAME"}
  }];

  string email = 2;
  int32 age = 3;
  bool debug = 4;
}

message CreateUserResponse {
  option (mikros.extensions.message_options) = {
    outbound: {
      naming_mode: NAMING_MODE_SNAKE_CASE
    }
  };

  user.UserWire user = 1;
  google.protobuf.Struct single_response = 2;
  repeated google.protobuf.Struct responses = 3;
}
