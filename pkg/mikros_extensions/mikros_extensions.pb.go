// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v5.29.3
// source: proto/mikros_extensions.proto

package mikros_extensions

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuthorizationMode int32

const (
	AuthorizationMode_AUTHORIZATION_MODE_NO_AUTH AuthorizationMode = 0
	AuthorizationMode_AUTHORIZATION_MODE_CUSTOM  AuthorizationMode = 1
)

// Enum value maps for AuthorizationMode.
var (
	AuthorizationMode_name = map[int32]string{
		0: "AUTHORIZATION_MODE_NO_AUTH",
		1: "AUTHORIZATION_MODE_CUSTOM",
	}
	AuthorizationMode_value = map[string]int32{
		"AUTHORIZATION_MODE_NO_AUTH": 0,
		"AUTHORIZATION_MODE_CUSTOM":  1,
	}
)

func (x AuthorizationMode) Enum() *AuthorizationMode {
	p := new(AuthorizationMode)
	*p = x
	return p
}

func (x AuthorizationMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthorizationMode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_mikros_extensions_proto_enumTypes[0].Descriptor()
}

func (AuthorizationMode) Type() protoreflect.EnumType {
	return &file_proto_mikros_extensions_proto_enumTypes[0]
}

func (x AuthorizationMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *AuthorizationMode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = AuthorizationMode(num)
	return nil
}

// Deprecated: Use AuthorizationMode.Descriptor instead.
func (AuthorizationMode) EnumDescriptor() ([]byte, []int) {
	return file_proto_mikros_extensions_proto_rawDescGZIP(), []int{0}
}

type FieldValidatorRule int32

const (
	FieldValidatorRule_FIELD_VALIDATOR_RULE_UNSPECIFIED FieldValidatorRule = 0
	FieldValidatorRule_FIELD_VALIDATOR_RULE_REGEX       FieldValidatorRule = 1
	FieldValidatorRule_FIELD_VALIDATOR_RULE_CUSTOM      FieldValidatorRule = 2
)

// Enum value maps for FieldValidatorRule.
var (
	FieldValidatorRule_name = map[int32]string{
		0: "FIELD_VALIDATOR_RULE_UNSPECIFIED",
		1: "FIELD_VALIDATOR_RULE_REGEX",
		2: "FIELD_VALIDATOR_RULE_CUSTOM",
	}
	FieldValidatorRule_value = map[string]int32{
		"FIELD_VALIDATOR_RULE_UNSPECIFIED": 0,
		"FIELD_VALIDATOR_RULE_REGEX":       1,
		"FIELD_VALIDATOR_RULE_CUSTOM":      2,
	}
)

func (x FieldValidatorRule) Enum() *FieldValidatorRule {
	p := new(FieldValidatorRule)
	*p = x
	return p
}

func (x FieldValidatorRule) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldValidatorRule) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_mikros_extensions_proto_enumTypes[1].Descriptor()
}

func (FieldValidatorRule) Type() protoreflect.EnumType {
	return &file_proto_mikros_extensions_proto_enumTypes[1]
}

func (x FieldValidatorRule) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *FieldValidatorRule) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = FieldValidatorRule(num)
	return nil
}

// Deprecated: Use FieldValidatorRule.Descriptor instead.
func (FieldValidatorRule) EnumDescriptor() ([]byte, []int) {
	return file_proto_mikros_extensions_proto_rawDescGZIP(), []int{1}
}

type NamingMode int32

const (
	NamingMode_NAMING_MODE_SNAKE_CASE NamingMode = 0
	NamingMode_NAMING_MODE_CAMEL_CASE NamingMode = 1
)

// Enum value maps for NamingMode.
var (
	NamingMode_name = map[int32]string{
		0: "NAMING_MODE_SNAKE_CASE",
		1: "NAMING_MODE_CAMEL_CASE",
	}
	NamingMode_value = map[string]int32{
		"NAMING_MODE_SNAKE_CASE": 0,
		"NAMING_MODE_CAMEL_CASE": 1,
	}
)

func (x NamingMode) Enum() *NamingMode {
	p := new(NamingMode)
	*p = x
	return p
}

func (x NamingMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NamingMode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_mikros_extensions_proto_enumTypes[2].Descriptor()
}

func (NamingMode) Type() protoreflect.EnumType {
	return &file_proto_mikros_extensions_proto_enumTypes[2]
}

func (x NamingMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *NamingMode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = NamingMode(num)
	return nil
}

// Deprecated: Use NamingMode.Descriptor instead.
func (NamingMode) EnumDescriptor() ([]byte, []int) {
	return file_proto_mikros_extensions_proto_rawDescGZIP(), []int{2}
}

type MikrosServiceExtensions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authorization *HttpAuthorizationExtensions `protobuf:"bytes,1,opt,name=authorization" json:"authorization,omitempty"`
}

func (x *MikrosServiceExtensions) Reset() {
	*x = MikrosServiceExtensions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mikros_extensions_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MikrosServiceExtensions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MikrosServiceExtensions) ProtoMessage() {}

func (x *MikrosServiceExtensions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mikros_extensions_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MikrosServiceExtensions.ProtoReflect.Descriptor instead.
func (*MikrosServiceExtensions) Descriptor() ([]byte, []int) {
	return file_proto_mikros_extensions_proto_rawDescGZIP(), []int{0}
}

func (x *MikrosServiceExtensions) GetAuthorization() *HttpAuthorizationExtensions {
	if x != nil {
		return x.Authorization
	}
	return nil
}

type HttpAuthorizationExtensions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode           *AuthorizationMode `protobuf:"varint,1,req,name=mode,enum=mikros.extensions.AuthorizationMode" json:"mode,omitempty"`
	CustomAuthName *string            `protobuf:"bytes,2,opt,name=custom_auth_name,json=customAuthName" json:"custom_auth_name,omitempty"`
}

func (x *HttpAuthorizationExtensions) Reset() {
	*x = HttpAuthorizationExtensions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mikros_extensions_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpAuthorizationExtensions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpAuthorizationExtensions) ProtoMessage() {}

func (x *HttpAuthorizationExtensions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mikros_extensions_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpAuthorizationExtensions.ProtoReflect.Descriptor instead.
func (*HttpAuthorizationExtensions) Descriptor() ([]byte, []int) {
	return file_proto_mikros_extensions_proto_rawDescGZIP(), []int{1}
}

func (x *HttpAuthorizationExtensions) GetMode() AuthorizationMode {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return AuthorizationMode_AUTHORIZATION_MODE_NO_AUTH
}

func (x *HttpAuthorizationExtensions) GetCustomAuthName() string {
	if x != nil && x.CustomAuthName != nil {
		return *x.CustomAuthName
	}
	return ""
}

type MikrosMethodExtensions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Http *HttpMethodExtensions `protobuf:"bytes,1,opt,name=http" json:"http,omitempty"`
}

func (x *MikrosMethodExtensions) Reset() {
	*x = MikrosMethodExtensions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mikros_extensions_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MikrosMethodExtensions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MikrosMethodExtensions) ProtoMessage() {}

func (x *MikrosMethodExtensions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mikros_extensions_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MikrosMethodExtensions.ProtoReflect.Descriptor instead.
func (*MikrosMethodExtensions) Descriptor() ([]byte, []int) {
	return file_proto_mikros_extensions_proto_rawDescGZIP(), []int{2}
}

func (x *MikrosMethodExtensions) GetHttp() *HttpMethodExtensions {
	if x != nil {
		return x.Http
	}
	return nil
}

type HttpMethodExtensions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header  []string `protobuf:"bytes,1,rep,name=header" json:"header,omitempty"`
	AuthArg []string `protobuf:"bytes,2,rep,name=auth_arg,json=authArg" json:"auth_arg,omitempty"`
}

func (x *HttpMethodExtensions) Reset() {
	*x = HttpMethodExtensions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mikros_extensions_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpMethodExtensions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpMethodExtensions) ProtoMessage() {}

func (x *HttpMethodExtensions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mikros_extensions_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpMethodExtensions.ProtoReflect.Descriptor instead.
func (*HttpMethodExtensions) Descriptor() ([]byte, []int) {
	return file_proto_mikros_extensions_proto_rawDescGZIP(), []int{3}
}

func (x *HttpMethodExtensions) GetHeader() []string {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *HttpMethodExtensions) GetAuthArg() []string {
	if x != nil {
		return x.AuthArg
	}
	return nil
}

type MikrosEnumExtensions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Api *EnumApiExtensions `protobuf:"bytes,1,opt,name=api" json:"api,omitempty"`
}

func (x *MikrosEnumExtensions) Reset() {
	*x = MikrosEnumExtensions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mikros_extensions_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MikrosEnumExtensions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MikrosEnumExtensions) ProtoMessage() {}

func (x *MikrosEnumExtensions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mikros_extensions_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MikrosEnumExtensions.ProtoReflect.Descriptor instead.
func (*MikrosEnumExtensions) Descriptor() ([]byte, []int) {
	return file_proto_mikros_extensions_proto_rawDescGZIP(), []int{4}
}

func (x *MikrosEnumExtensions) GetApi() *EnumApiExtensions {
	if x != nil {
		return x.Api
	}
	return nil
}

type EnumApiExtensions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bitflag   *bool `protobuf:"varint,1,opt,name=bitflag" json:"bitflag,omitempty"`
	ErrorCode *bool `protobuf:"varint,2,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (x *EnumApiExtensions) Reset() {
	*x = EnumApiExtensions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mikros_extensions_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumApiExtensions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumApiExtensions) ProtoMessage() {}

func (x *EnumApiExtensions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mikros_extensions_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumApiExtensions.ProtoReflect.Descriptor instead.
func (*EnumApiExtensions) Descriptor() ([]byte, []int) {
	return file_proto_mikros_extensions_proto_rawDescGZIP(), []int{5}
}

func (x *EnumApiExtensions) GetBitflag() bool {
	if x != nil && x.Bitflag != nil {
		return *x.Bitflag
	}
	return false
}

func (x *EnumApiExtensions) GetErrorCode() bool {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return false
}

type MikrosEnumValueExtensions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry *EnumEntry `protobuf:"bytes,1,opt,name=entry" json:"entry,omitempty"`
}

func (x *MikrosEnumValueExtensions) Reset() {
	*x = MikrosEnumValueExtensions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mikros_extensions_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MikrosEnumValueExtensions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MikrosEnumValueExtensions) ProtoMessage() {}

func (x *MikrosEnumValueExtensions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mikros_extensions_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MikrosEnumValueExtensions.ProtoReflect.Descriptor instead.
func (*MikrosEnumValueExtensions) Descriptor() ([]byte, []int) {
	return file_proto_mikros_extensions_proto_rawDescGZIP(), []int{6}
}

func (x *MikrosEnumValueExtensions) GetEntry() *EnumEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type EnumEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *EnumEntry) Reset() {
	*x = EnumEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mikros_extensions_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumEntry) ProtoMessage() {}

func (x *EnumEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mikros_extensions_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumEntry.ProtoReflect.Descriptor instead.
func (*EnumEntry) Descriptor() ([]byte, []int) {
	return file_proto_mikros_extensions_proto_rawDescGZIP(), []int{7}
}

func (x *EnumEntry) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type MikrosFieldExtensions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain   *FieldDomainOptions   `protobuf:"bytes,1,opt,name=domain" json:"domain,omitempty"`
	Database *FieldDatabaseOptions `protobuf:"bytes,2,opt,name=database" json:"database,omitempty"`
	Inbound  *FieldInboundOptions  `protobuf:"bytes,3,opt,name=inbound" json:"inbound,omitempty"`
	Outbound *FieldOutboundOptions `protobuf:"bytes,4,opt,name=outbound" json:"outbound,omitempty"`
	Validate *FieldValidateOptions `protobuf:"bytes,5,opt,name=validate" json:"validate,omitempty"`
	Testing  *FieldTestingOptions  `protobuf:"bytes,6,opt,name=testing" json:"testing,omitempty"`
}

func (x *MikrosFieldExtensions) Reset() {
	*x = MikrosFieldExtensions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mikros_extensions_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MikrosFieldExtensions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MikrosFieldExtensions) ProtoMessage() {}

func (x *MikrosFieldExtensions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mikros_extensions_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MikrosFieldExtensions.ProtoReflect.Descriptor instead.
func (*MikrosFieldExtensions) Descriptor() ([]byte, []int) {
	return file_proto_mikros_extensions_proto_rawDescGZIP(), []int{8}
}

func (x *MikrosFieldExtensions) GetDomain() *FieldDomainOptions {
	if x != nil {
		return x.Domain
	}
	return nil
}

func (x *MikrosFieldExtensions) GetDatabase() *FieldDatabaseOptions {
	if x != nil {
		return x.Database
	}
	return nil
}

func (x *MikrosFieldExtensions) GetInbound() *FieldInboundOptions {
	if x != nil {
		return x.Inbound
	}
	return nil
}

func (x *MikrosFieldExtensions) GetOutbound() *FieldOutboundOptions {
	if x != nil {
		return x.Outbound
	}
	return nil
}

func (x *MikrosFieldExtensions) GetValidate() *FieldValidateOptions {
	if x != nil {
		return x.Validate
	}
	return nil
}

func (x *MikrosFieldExtensions) GetTesting() *FieldTestingOptions {
	if x != nil {
		return x.Testing
	}
	return nil
}

type FieldDomainOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       *string                 `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	AllowEmpty *bool                   `protobuf:"varint,2,opt,name=allow_empty,json=allowEmpty" json:"allow_empty,omitempty"`
	StructTag  []*FieldDomainStructTag `protobuf:"bytes,3,rep,name=struct_tag,json=structTag" json:"struct_tag,omitempty"`
}

func (x *FieldDomainOptions) Reset() {
	*x = FieldDomainOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mikros_extensions_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldDomainOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldDomainOptions) ProtoMessage() {}

func (x *FieldDomainOptions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mikros_extensions_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldDomainOptions.ProtoReflect.Descriptor instead.
func (*FieldDomainOptions) Descriptor() ([]byte, []int) {
	return file_proto_mikros_extensions_proto_rawDescGZIP(), []int{9}
}

func (x *FieldDomainOptions) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *FieldDomainOptions) GetAllowEmpty() bool {
	if x != nil && x.AllowEmpty != nil {
		return *x.AllowEmpty
	}
	return false
}

func (x *FieldDomainOptions) GetStructTag() []*FieldDomainStructTag {
	if x != nil {
		return x.StructTag
	}
	return nil
}

type FieldDomainStructTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Value *string `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
}

func (x *FieldDomainStructTag) Reset() {
	*x = FieldDomainStructTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mikros_extensions_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldDomainStructTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldDomainStructTag) ProtoMessage() {}

func (x *FieldDomainStructTag) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mikros_extensions_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldDomainStructTag.ProtoReflect.Descriptor instead.
func (*FieldDomainStructTag) Descriptor() ([]byte, []int) {
	return file_proto_mikros_extensions_proto_rawDescGZIP(), []int{10}
}

func (x *FieldDomainStructTag) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *FieldDomainStructTag) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type FieldDatabaseOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	AllowEmpty    *bool   `protobuf:"varint,2,opt,name=allow_empty,json=allowEmpty" json:"allow_empty,omitempty"`
	Index         *bool   `protobuf:"varint,3,opt,name=index" json:"index,omitempty"`
	Unique        *bool   `protobuf:"varint,4,opt,name=unique" json:"unique,omitempty"`
	UniqueIndex   *bool   `protobuf:"varint,5,opt,name=unique_index,json=uniqueIndex" json:"unique_index,omitempty"`
	PrimaryKey    *bool   `protobuf:"varint,6,opt,name=primary_key,json=primaryKey" json:"primary_key,omitempty"`
	AutoIncrement *bool   `protobuf:"varint,7,opt,name=auto_increment,json=autoIncrement" json:"auto_increment,omitempty"`
}

func (x *FieldDatabaseOptions) Reset() {
	*x = FieldDatabaseOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mikros_extensions_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldDatabaseOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldDatabaseOptions) ProtoMessage() {}

func (x *FieldDatabaseOptions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mikros_extensions_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldDatabaseOptions.ProtoReflect.Descriptor instead.
func (*FieldDatabaseOptions) Descriptor() ([]byte, []int) {
	return file_proto_mikros_extensions_proto_rawDescGZIP(), []int{11}
}

func (x *FieldDatabaseOptions) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *FieldDatabaseOptions) GetAllowEmpty() bool {
	if x != nil && x.AllowEmpty != nil {
		return *x.AllowEmpty
	}
	return false
}

func (x *FieldDatabaseOptions) GetIndex() bool {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return false
}

func (x *FieldDatabaseOptions) GetUnique() bool {
	if x != nil && x.Unique != nil {
		return *x.Unique
	}
	return false
}

func (x *FieldDatabaseOptions) GetUniqueIndex() bool {
	if x != nil && x.UniqueIndex != nil {
		return *x.UniqueIndex
	}
	return false
}

func (x *FieldDatabaseOptions) GetPrimaryKey() bool {
	if x != nil && x.PrimaryKey != nil {
		return *x.PrimaryKey
	}
	return false
}

func (x *FieldDatabaseOptions) GetAutoIncrement() bool {
	if x != nil && x.AutoIncrement != nil {
		return *x.AutoIncrement
	}
	return false
}

type FieldInboundOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *FieldInboundOptions) Reset() {
	*x = FieldInboundOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mikros_extensions_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldInboundOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldInboundOptions) ProtoMessage() {}

func (x *FieldInboundOptions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mikros_extensions_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldInboundOptions.ProtoReflect.Descriptor instead.
func (*FieldInboundOptions) Descriptor() ([]byte, []int) {
	return file_proto_mikros_extensions_proto_rawDescGZIP(), []int{12}
}

func (x *FieldInboundOptions) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type FieldOutboundOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         *string                 `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Hide         *bool                   `protobuf:"varint,2,opt,name=hide" json:"hide,omitempty"`
	Bitflag      *OutboundBitflagField   `protobuf:"bytes,3,opt,name=bitflag" json:"bitflag,omitempty"`
	AllowEmpty   *bool                   `protobuf:"varint,4,opt,name=allow_empty,json=allowEmpty" json:"allow_empty,omitempty"`
	StructTag    []*FieldDomainStructTag `protobuf:"bytes,5,rep,name=struct_tag,json=structTag" json:"struct_tag,omitempty"`
	CustomBind   *bool                   `protobuf:"varint,6,opt,name=custom_bind,json=customBind" json:"custom_bind,omitempty"`
	CustomType   *string                 `protobuf:"bytes,7,opt,name=custom_type,json=customType" json:"custom_type,omitempty"`
	CustomImport *MikrosCustomImport     `protobuf:"bytes,8,opt,name=custom_import,json=customImport" json:"custom_import,omitempty"`
}

func (x *FieldOutboundOptions) Reset() {
	*x = FieldOutboundOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mikros_extensions_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldOutboundOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldOutboundOptions) ProtoMessage() {}

func (x *FieldOutboundOptions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mikros_extensions_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldOutboundOptions.ProtoReflect.Descriptor instead.
func (*FieldOutboundOptions) Descriptor() ([]byte, []int) {
	return file_proto_mikros_extensions_proto_rawDescGZIP(), []int{13}
}

func (x *FieldOutboundOptions) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *FieldOutboundOptions) GetHide() bool {
	if x != nil && x.Hide != nil {
		return *x.Hide
	}
	return false
}

func (x *FieldOutboundOptions) GetBitflag() *OutboundBitflagField {
	if x != nil {
		return x.Bitflag
	}
	return nil
}

func (x *FieldOutboundOptions) GetAllowEmpty() bool {
	if x != nil && x.AllowEmpty != nil {
		return *x.AllowEmpty
	}
	return false
}

func (x *FieldOutboundOptions) GetStructTag() []*FieldDomainStructTag {
	if x != nil {
		return x.StructTag
	}
	return nil
}

func (x *FieldOutboundOptions) GetCustomBind() bool {
	if x != nil && x.CustomBind != nil {
		return *x.CustomBind
	}
	return false
}

func (x *FieldOutboundOptions) GetCustomType() string {
	if x != nil && x.CustomType != nil {
		return *x.CustomType
	}
	return ""
}

func (x *FieldOutboundOptions) GetCustomImport() *MikrosCustomImport {
	if x != nil {
		return x.CustomImport
	}
	return nil
}

type OutboundBitflagField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Values must point to a valid enum name which holds all the values that the
	// bitflag represents.
	Values *string `protobuf:"bytes,1,req,name=values" json:"values,omitempty"`
	// Sets an optional prefix string that is present in all values that represents
	// the bitflag.
	Prefix *string `protobuf:"bytes,2,req,name=prefix" json:"prefix,omitempty"`
}

func (x *OutboundBitflagField) Reset() {
	*x = OutboundBitflagField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mikros_extensions_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutboundBitflagField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutboundBitflagField) ProtoMessage() {}

func (x *OutboundBitflagField) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mikros_extensions_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutboundBitflagField.ProtoReflect.Descriptor instead.
func (*OutboundBitflagField) Descriptor() ([]byte, []int) {
	return file_proto_mikros_extensions_proto_rawDescGZIP(), []int{14}
}

func (x *OutboundBitflagField) GetValues() string {
	if x != nil && x.Values != nil {
		return *x.Values
	}
	return ""
}

func (x *OutboundBitflagField) GetPrefix() string {
	if x != nil && x.Prefix != nil {
		return *x.Prefix
	}
	return ""
}

type FieldValidateOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rule            *FieldValidatorRule `protobuf:"varint,1,opt,name=rule,enum=mikros.extensions.FieldValidatorRule" json:"rule,omitempty"`
	RuleArgs        []string            `protobuf:"bytes,2,rep,name=rule_args,json=ruleArgs" json:"rule_args,omitempty"`
	CustomRule      *string             `protobuf:"bytes,3,opt,name=custom_rule,json=customRule" json:"custom_rule,omitempty"`
	Required        *bool               `protobuf:"varint,4,opt,name=required" json:"required,omitempty"`
	Min             *int32              `protobuf:"varint,5,opt,name=min" json:"min,omitempty"`
	Max             *int32              `protobuf:"varint,6,opt,name=max" json:"max,omitempty"`
	MaxLength       *int32              `protobuf:"varint,7,opt,name=max_length,json=maxLength" json:"max_length,omitempty"`
	Dive            *bool               `protobuf:"varint,8,opt,name=dive" json:"dive,omitempty"`
	RequiredIf      *string             `protobuf:"bytes,9,opt,name=required_if,json=requiredIf" json:"required_if,omitempty"`
	RequiredIfNot   *string             `protobuf:"bytes,10,opt,name=required_if_not,json=requiredIfNot" json:"required_if_not,omitempty"`
	RequiredWith    *string             `protobuf:"bytes,11,opt,name=required_with,json=requiredWith" json:"required_with,omitempty"`
	RequiredWithout *string             `protobuf:"bytes,12,opt,name=required_without,json=requiredWithout" json:"required_without,omitempty"`
	RequiredAll     *string             `protobuf:"bytes,13,opt,name=required_all,json=requiredAll" json:"required_all,omitempty"`
	RequiredAny     *string             `protobuf:"bytes,14,opt,name=required_any,json=requiredAny" json:"required_any,omitempty"`
	ErrorMessage    *string             `protobuf:"bytes,15,opt,name=error_message,json=errorMessage" json:"error_message,omitempty"`
	Skip            *bool               `protobuf:"varint,16,opt,name=skip" json:"skip,omitempty"`
}

func (x *FieldValidateOptions) Reset() {
	*x = FieldValidateOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mikros_extensions_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldValidateOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldValidateOptions) ProtoMessage() {}

func (x *FieldValidateOptions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mikros_extensions_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldValidateOptions.ProtoReflect.Descriptor instead.
func (*FieldValidateOptions) Descriptor() ([]byte, []int) {
	return file_proto_mikros_extensions_proto_rawDescGZIP(), []int{15}
}

func (x *FieldValidateOptions) GetRule() FieldValidatorRule {
	if x != nil && x.Rule != nil {
		return *x.Rule
	}
	return FieldValidatorRule_FIELD_VALIDATOR_RULE_UNSPECIFIED
}

func (x *FieldValidateOptions) GetRuleArgs() []string {
	if x != nil {
		return x.RuleArgs
	}
	return nil
}

func (x *FieldValidateOptions) GetCustomRule() string {
	if x != nil && x.CustomRule != nil {
		return *x.CustomRule
	}
	return ""
}

func (x *FieldValidateOptions) GetRequired() bool {
	if x != nil && x.Required != nil {
		return *x.Required
	}
	return false
}

func (x *FieldValidateOptions) GetMin() int32 {
	if x != nil && x.Min != nil {
		return *x.Min
	}
	return 0
}

func (x *FieldValidateOptions) GetMax() int32 {
	if x != nil && x.Max != nil {
		return *x.Max
	}
	return 0
}

func (x *FieldValidateOptions) GetMaxLength() int32 {
	if x != nil && x.MaxLength != nil {
		return *x.MaxLength
	}
	return 0
}

func (x *FieldValidateOptions) GetDive() bool {
	if x != nil && x.Dive != nil {
		return *x.Dive
	}
	return false
}

func (x *FieldValidateOptions) GetRequiredIf() string {
	if x != nil && x.RequiredIf != nil {
		return *x.RequiredIf
	}
	return ""
}

func (x *FieldValidateOptions) GetRequiredIfNot() string {
	if x != nil && x.RequiredIfNot != nil {
		return *x.RequiredIfNot
	}
	return ""
}

func (x *FieldValidateOptions) GetRequiredWith() string {
	if x != nil && x.RequiredWith != nil {
		return *x.RequiredWith
	}
	return ""
}

func (x *FieldValidateOptions) GetRequiredWithout() string {
	if x != nil && x.RequiredWithout != nil {
		return *x.RequiredWithout
	}
	return ""
}

func (x *FieldValidateOptions) GetRequiredAll() string {
	if x != nil && x.RequiredAll != nil {
		return *x.RequiredAll
	}
	return ""
}

func (x *FieldValidateOptions) GetRequiredAny() string {
	if x != nil && x.RequiredAny != nil {
		return *x.RequiredAny
	}
	return ""
}

func (x *FieldValidateOptions) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

func (x *FieldValidateOptions) GetSkip() bool {
	if x != nil && x.Skip != nil {
		return *x.Skip
	}
	return false
}

type FieldTestingOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomRule *string  `protobuf:"bytes,1,req,name=custom_rule,json=customRule" json:"custom_rule,omitempty"`
	RuleArgs   []string `protobuf:"bytes,2,rep,name=rule_args,json=ruleArgs" json:"rule_args,omitempty"`
}

func (x *FieldTestingOptions) Reset() {
	*x = FieldTestingOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mikros_extensions_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldTestingOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldTestingOptions) ProtoMessage() {}

func (x *FieldTestingOptions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mikros_extensions_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldTestingOptions.ProtoReflect.Descriptor instead.
func (*FieldTestingOptions) Descriptor() ([]byte, []int) {
	return file_proto_mikros_extensions_proto_rawDescGZIP(), []int{16}
}

func (x *FieldTestingOptions) GetCustomRule() string {
	if x != nil && x.CustomRule != nil {
		return *x.CustomRule
	}
	return ""
}

func (x *FieldTestingOptions) GetRuleArgs() []string {
	if x != nil {
		return x.RuleArgs
	}
	return nil
}

type MikrosMessageExtensions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain    *MessageDomainExtensions    `protobuf:"bytes,1,opt,name=domain" json:"domain,omitempty"`
	CustomApi *MessageCustomApiExtensions `protobuf:"bytes,2,opt,name=custom_api,json=customApi" json:"custom_api,omitempty"`
	Inbound   *MessageInboundExtensions   `protobuf:"bytes,3,opt,name=inbound" json:"inbound,omitempty"`
	Outbound  *MessageOutboundExtensions  `protobuf:"bytes,4,opt,name=outbound" json:"outbound,omitempty"`
	WireInput *MessageWireInputExtensions `protobuf:"bytes,5,opt,name=wire_input,json=wireInput" json:"wire_input,omitempty"`
}

func (x *MikrosMessageExtensions) Reset() {
	*x = MikrosMessageExtensions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mikros_extensions_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MikrosMessageExtensions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MikrosMessageExtensions) ProtoMessage() {}

func (x *MikrosMessageExtensions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mikros_extensions_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MikrosMessageExtensions.ProtoReflect.Descriptor instead.
func (*MikrosMessageExtensions) Descriptor() ([]byte, []int) {
	return file_proto_mikros_extensions_proto_rawDescGZIP(), []int{17}
}

func (x *MikrosMessageExtensions) GetDomain() *MessageDomainExtensions {
	if x != nil {
		return x.Domain
	}
	return nil
}

func (x *MikrosMessageExtensions) GetCustomApi() *MessageCustomApiExtensions {
	if x != nil {
		return x.CustomApi
	}
	return nil
}

func (x *MikrosMessageExtensions) GetInbound() *MessageInboundExtensions {
	if x != nil {
		return x.Inbound
	}
	return nil
}

func (x *MikrosMessageExtensions) GetOutbound() *MessageOutboundExtensions {
	if x != nil {
		return x.Outbound
	}
	return nil
}

func (x *MikrosMessageExtensions) GetWireInput() *MessageWireInputExtensions {
	if x != nil {
		return x.WireInput
	}
	return nil
}

type MessageDomainExtensions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DontExport *bool       `protobuf:"varint,1,opt,name=dont_export,json=dontExport" json:"dont_export,omitempty"`
	NamingMode *NamingMode `protobuf:"varint,2,opt,name=naming_mode,json=namingMode,enum=mikros.extensions.NamingMode" json:"naming_mode,omitempty"`
}

func (x *MessageDomainExtensions) Reset() {
	*x = MessageDomainExtensions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mikros_extensions_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageDomainExtensions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageDomainExtensions) ProtoMessage() {}

func (x *MessageDomainExtensions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mikros_extensions_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageDomainExtensions.ProtoReflect.Descriptor instead.
func (*MessageDomainExtensions) Descriptor() ([]byte, []int) {
	return file_proto_mikros_extensions_proto_rawDescGZIP(), []int{18}
}

func (x *MessageDomainExtensions) GetDontExport() bool {
	if x != nil && x.DontExport != nil {
		return *x.DontExport
	}
	return false
}

func (x *MessageDomainExtensions) GetNamingMode() NamingMode {
	if x != nil && x.NamingMode != nil {
		return *x.NamingMode
	}
	return NamingMode_NAMING_MODE_SNAKE_CASE
}

type MessageCustomApiExtensions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Function []*CustomFunctionExtensions `protobuf:"bytes,1,rep,name=function" json:"function,omitempty"`
	Block    []string                    `protobuf:"bytes,2,rep,name=block" json:"block,omitempty"`
}

func (x *MessageCustomApiExtensions) Reset() {
	*x = MessageCustomApiExtensions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mikros_extensions_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageCustomApiExtensions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageCustomApiExtensions) ProtoMessage() {}

func (x *MessageCustomApiExtensions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mikros_extensions_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageCustomApiExtensions.ProtoReflect.Descriptor instead.
func (*MessageCustomApiExtensions) Descriptor() ([]byte, []int) {
	return file_proto_mikros_extensions_proto_rawDescGZIP(), []int{19}
}

func (x *MessageCustomApiExtensions) GetFunction() []*CustomFunctionExtensions {
	if x != nil {
		return x.Function
	}
	return nil
}

func (x *MessageCustomApiExtensions) GetBlock() []string {
	if x != nil {
		return x.Block
	}
	return nil
}

type CustomFunctionExtensions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature *string               `protobuf:"bytes,1,req,name=signature" json:"signature,omitempty"`
	Body      *string               `protobuf:"bytes,2,req,name=body" json:"body,omitempty"`
	Import    []*MikrosCustomImport `protobuf:"bytes,3,rep,name=import" json:"import,omitempty"`
}

func (x *CustomFunctionExtensions) Reset() {
	*x = CustomFunctionExtensions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mikros_extensions_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomFunctionExtensions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomFunctionExtensions) ProtoMessage() {}

func (x *CustomFunctionExtensions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mikros_extensions_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomFunctionExtensions.ProtoReflect.Descriptor instead.
func (*CustomFunctionExtensions) Descriptor() ([]byte, []int) {
	return file_proto_mikros_extensions_proto_rawDescGZIP(), []int{20}
}

func (x *CustomFunctionExtensions) GetSignature() string {
	if x != nil && x.Signature != nil {
		return *x.Signature
	}
	return ""
}

func (x *CustomFunctionExtensions) GetBody() string {
	if x != nil && x.Body != nil {
		return *x.Body
	}
	return ""
}

func (x *CustomFunctionExtensions) GetImport() []*MikrosCustomImport {
	if x != nil {
		return x.Import
	}
	return nil
}

type MikrosCustomImport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alias *string `protobuf:"bytes,1,opt,name=alias" json:"alias,omitempty"`
	Name  *string `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
}

func (x *MikrosCustomImport) Reset() {
	*x = MikrosCustomImport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mikros_extensions_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MikrosCustomImport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MikrosCustomImport) ProtoMessage() {}

func (x *MikrosCustomImport) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mikros_extensions_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MikrosCustomImport.ProtoReflect.Descriptor instead.
func (*MikrosCustomImport) Descriptor() ([]byte, []int) {
	return file_proto_mikros_extensions_proto_rawDescGZIP(), []int{21}
}

func (x *MikrosCustomImport) GetAlias() string {
	if x != nil && x.Alias != nil {
		return *x.Alias
	}
	return ""
}

func (x *MikrosCustomImport) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type MessageInboundExtensions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamingMode *NamingMode `protobuf:"varint,1,opt,name=naming_mode,json=namingMode,enum=mikros.extensions.NamingMode" json:"naming_mode,omitempty"`
}

func (x *MessageInboundExtensions) Reset() {
	*x = MessageInboundExtensions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mikros_extensions_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageInboundExtensions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageInboundExtensions) ProtoMessage() {}

func (x *MessageInboundExtensions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mikros_extensions_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageInboundExtensions.ProtoReflect.Descriptor instead.
func (*MessageInboundExtensions) Descriptor() ([]byte, []int) {
	return file_proto_mikros_extensions_proto_rawDescGZIP(), []int{22}
}

func (x *MessageInboundExtensions) GetNamingMode() NamingMode {
	if x != nil && x.NamingMode != nil {
		return *x.NamingMode
	}
	return NamingMode_NAMING_MODE_SNAKE_CASE
}

type MessageOutboundExtensions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Export     *bool       `protobuf:"varint,1,opt,name=export" json:"export,omitempty"`
	NamingMode *NamingMode `protobuf:"varint,2,opt,name=naming_mode,json=namingMode,enum=mikros.extensions.NamingMode" json:"naming_mode,omitempty"`
}

func (x *MessageOutboundExtensions) Reset() {
	*x = MessageOutboundExtensions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mikros_extensions_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageOutboundExtensions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageOutboundExtensions) ProtoMessage() {}

func (x *MessageOutboundExtensions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mikros_extensions_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageOutboundExtensions.ProtoReflect.Descriptor instead.
func (*MessageOutboundExtensions) Descriptor() ([]byte, []int) {
	return file_proto_mikros_extensions_proto_rawDescGZIP(), []int{23}
}

func (x *MessageOutboundExtensions) GetExport() bool {
	if x != nil && x.Export != nil {
		return *x.Export
	}
	return false
}

func (x *MessageOutboundExtensions) GetNamingMode() NamingMode {
	if x != nil && x.NamingMode != nil {
		return *x.NamingMode
	}
	return NamingMode_NAMING_MODE_SNAKE_CASE
}

type MessageWireInputExtensions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Export *bool `protobuf:"varint,1,opt,name=export" json:"export,omitempty"`
}

func (x *MessageWireInputExtensions) Reset() {
	*x = MessageWireInputExtensions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mikros_extensions_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageWireInputExtensions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageWireInputExtensions) ProtoMessage() {}

func (x *MessageWireInputExtensions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mikros_extensions_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageWireInputExtensions.ProtoReflect.Descriptor instead.
func (*MessageWireInputExtensions) Descriptor() ([]byte, []int) {
	return file_proto_mikros_extensions_proto_rawDescGZIP(), []int{24}
}

func (x *MessageWireInputExtensions) GetExport() bool {
	if x != nil && x.Export != nil {
		return *x.Export
	}
	return false
}

var file_proto_mikros_extensions_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.ServiceOptions)(nil),
		ExtensionType: (*MikrosServiceExtensions)(nil),
		Field:         85042,
		Name:          "mikros.extensions.service_options",
		Tag:           "bytes,85042,opt,name=service_options",
		Filename:      "proto/mikros_extensions.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*MikrosMethodExtensions)(nil),
		Field:         85042,
		Name:          "mikros.extensions.method_options",
		Tag:           "bytes,85042,opt,name=method_options",
		Filename:      "proto/mikros_extensions.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumOptions)(nil),
		ExtensionType: (*MikrosEnumExtensions)(nil),
		Field:         85042,
		Name:          "mikros.extensions.enum_options",
		Tag:           "bytes,85042,opt,name=enum_options",
		Filename:      "proto/mikros_extensions.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*MikrosEnumValueExtensions)(nil),
		Field:         85042,
		Name:          "mikros.extensions.enum_value_options",
		Tag:           "bytes,85042,opt,name=enum_value_options",
		Filename:      "proto/mikros_extensions.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*MikrosFieldExtensions)(nil),
		Field:         85042,
		Name:          "mikros.extensions.field_options",
		Tag:           "bytes,85042,opt,name=field_options",
		Filename:      "proto/mikros_extensions.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*MikrosMessageExtensions)(nil),
		Field:         85042,
		Name:          "mikros.extensions.message_options",
		Tag:           "bytes,85042,opt,name=message_options",
		Filename:      "proto/mikros_extensions.proto",
	},
}

// Extension fields to descriptorpb.ServiceOptions.
var (
	// optional mikros.extensions.MikrosServiceExtensions service_options = 85042;
	E_ServiceOptions = &file_proto_mikros_extensions_proto_extTypes[0]
)

// Extension fields to descriptorpb.MethodOptions.
var (
	// optional mikros.extensions.MikrosMethodExtensions method_options = 85042;
	E_MethodOptions = &file_proto_mikros_extensions_proto_extTypes[1]
)

// Extension fields to descriptorpb.EnumOptions.
var (
	// optional mikros.extensions.MikrosEnumExtensions enum_options = 85042;
	E_EnumOptions = &file_proto_mikros_extensions_proto_extTypes[2]
)

// Extension fields to descriptorpb.EnumValueOptions.
var (
	// optional mikros.extensions.MikrosEnumValueExtensions enum_value_options = 85042;
	E_EnumValueOptions = &file_proto_mikros_extensions_proto_extTypes[3]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional mikros.extensions.MikrosFieldExtensions field_options = 85042;
	E_FieldOptions = &file_proto_mikros_extensions_proto_extTypes[4]
)

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional mikros.extensions.MikrosMessageExtensions message_options = 85042;
	E_MessageOptions = &file_proto_mikros_extensions_proto_extTypes[5]
)

var File_proto_mikros_extensions_proto protoreflect.FileDescriptor

var file_proto_mikros_extensions_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x5f, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x11, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6f, 0x0a, 0x17, 0x4d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x54, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2e,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x81, 0x01, 0x0a, 0x1b, 0x48, 0x74, 0x74, 0x70, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x38, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12,
	0x28, 0x0a, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x41, 0x75, 0x74, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x55, 0x0a, 0x16, 0x4d, 0x69, 0x6b,
	0x72, 0x6f, 0x73, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x3b, 0x0a, 0x04, 0x68, 0x74, 0x74, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x04, 0x68, 0x74, 0x74, 0x70,
	0x22, 0x49, 0x0a, 0x14, 0x48, 0x74, 0x74, 0x70, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x61, 0x72, 0x67, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x41, 0x72, 0x67, 0x22, 0x4e, 0x0a, 0x14, 0x4d,
	0x69, 0x6b, 0x72, 0x6f, 0x73, 0x45, 0x6e, 0x75, 0x6d, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x36, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x41, 0x70, 0x69, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x03, 0x61, 0x70, 0x69, 0x22, 0x4c, 0x0a, 0x11, 0x45,
	0x6e, 0x75, 0x6d, 0x41, 0x70, 0x69, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x69, 0x74, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x62, 0x69, 0x74, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x4f, 0x0a, 0x19, 0x4d, 0x69, 0x6b,
	0x72, 0x6f, 0x73, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2e, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x1f, 0x0a, 0x09, 0x45, 0x6e,
	0x75, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa9, 0x03, 0x0a, 0x15,
	0x4d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3d, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2e, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x06, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x12, 0x43, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2e,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x69, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x69, 0x6b,
	0x72, 0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x07, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x43, 0x0a, 0x08, 0x6f,
	0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x12, 0x43, 0x0a, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x08, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2e,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07,
	0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x91, 0x01, 0x0a, 0x12, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x5f, 0x74, 0x61,
	0x67, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73,
	0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x54, 0x61, 0x67,
	0x52, 0x09, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x54, 0x61, 0x67, 0x22, 0x40, 0x0a, 0x14, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x54, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xe4, 0x01,
	0x0a, 0x14, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x5f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x25, 0x0a,
	0x0e, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x6f, 0x49, 0x6e, 0x63, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x29, 0x0a, 0x13, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0xf8, 0x02, 0x0a, 0x14, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x69, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x68, 0x69, 0x64, 0x65,
	0x12, 0x41, 0x0a, 0x07, 0x62, 0x69, 0x74, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x69,
	0x74, 0x66, 0x6c, 0x61, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x07, 0x62, 0x69, 0x74, 0x66,
	0x6c, 0x61, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x5f, 0x74,
	0x61, 0x67, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f,
	0x73, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x54, 0x61,
	0x67, 0x52, 0x09, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x54, 0x61, 0x67, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x42, 0x69, 0x6e, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4a,
	0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2e, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x69, 0x6b, 0x72, 0x6f, 0x73,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x0c, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x46, 0x0a, 0x14, 0x4f, 0x75,
	0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x69, 0x74, 0x66, 0x6c, 0x61, 0x67, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x22, 0x9a, 0x04, 0x0a, 0x14, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x39, 0x0a, 0x04, 0x72,
	0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x6d, 0x69, 0x6b, 0x72,
	0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x61,
	0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x41,
	0x72, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x72, 0x75,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x52, 0x75, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d,
	0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x6d, 0x61, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x69, 0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x64, 0x69, 0x76, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x5f, 0x69, 0x66, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x49, 0x66, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x5f, 0x69, 0x66, 0x5f, 0x6e, 0x6f, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x49, 0x66, 0x4e, 0x6f, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x77, 0x69, 0x74,
	0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x57, 0x69, 0x74, 0x68, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x6c, 0x6c,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x41, 0x6c, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f,
	0x61, 0x6e, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x41, 0x6e, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6b, 0x69, 0x70, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x22,
	0x53, 0x0a, 0x13, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f,
	0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65,
	0x41, 0x72, 0x67, 0x73, 0x22, 0x8a, 0x03, 0x0a, 0x17, 0x4d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x42, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x06, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x12, 0x4c, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x61,
	0x70, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f,
	0x73, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41, 0x70, 0x69, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x09, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41,
	0x70, 0x69, 0x12, 0x45, 0x0a, 0x07, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x07, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x48, 0x0a, 0x08, 0x6f, 0x75, 0x74,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6d, 0x69,
	0x6b, 0x72, 0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x12, 0x4c, 0x0a, 0x0a, 0x77, 0x69, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73,
	0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x57, 0x69, 0x72, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x09, 0x77, 0x69, 0x72, 0x65, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x22, 0x7a, 0x0a, 0x17, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x64, 0x6f, 0x6e, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x64, 0x6f, 0x6e, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x3e, 0x0a,
	0x0b, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64,
	0x65, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x7b, 0x0a,
	0x1a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41, 0x70,
	0x69, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x47, 0x0a, 0x08, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x8b, 0x01, 0x0a, 0x18, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x3d, 0x0a, 0x06, 0x69, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x69, 0x6b, 0x72,
	0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x69,
	0x6b, 0x72, 0x6f, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x06, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x3e, 0x0a, 0x12, 0x4d, 0x69, 0x6b, 0x72,
	0x6f, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5a, 0x0a, 0x18, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3e, 0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6d, 0x69, 0x6b, 0x72,
	0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4e, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x4d, 0x6f, 0x64, 0x65, 0x22, 0x73, 0x0a, 0x19, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f,
	0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x3e, 0x0a, 0x0b, 0x6e, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d,
	0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x6e,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x34, 0x0a, 0x1a, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x57, 0x69, 0x72, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x2a,
	0x52, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x5f, 0x41, 0x55,
	0x54, 0x48, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f,
	0x4d, 0x10, 0x01, 0x2a, 0x7b, 0x0a, 0x12, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x20, 0x46, 0x49, 0x45,
	0x4c, 0x44, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x52, 0x55, 0x4c,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x1e, 0x0a, 0x1a, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54,
	0x4f, 0x52, 0x5f, 0x52, 0x55, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x47, 0x45, 0x58, 0x10, 0x01, 0x12,
	0x1f, 0x0a, 0x1b, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54,
	0x4f, 0x52, 0x5f, 0x52, 0x55, 0x4c, 0x45, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x10, 0x02,
	0x2a, 0x44, 0x0a, 0x0a, 0x4e, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1a,
	0x0a, 0x16, 0x4e, 0x41, 0x4d, 0x49, 0x4e, 0x47, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x4e,
	0x41, 0x4b, 0x45, 0x5f, 0x43, 0x41, 0x53, 0x45, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x4e, 0x41,
	0x4d, 0x49, 0x4e, 0x47, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x41, 0x4d, 0x45, 0x4c, 0x5f,
	0x43, 0x41, 0x53, 0x45, 0x10, 0x01, 0x3a, 0x76, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb2, 0x98, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x72,
	0x0a, 0x0e, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0xb2, 0x98, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f,
	0x73, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x69, 0x6b,
	0x72, 0x6f, 0x73, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x0d, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x3a, 0x6a, 0x0a, 0x0c, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0xb2, 0x98, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f,
	0x73, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x69, 0x6b,
	0x72, 0x6f, 0x73, 0x45, 0x6e, 0x75, 0x6d, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x0b, 0x65, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x7f,
	0x0a, 0x12, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb2, 0x98, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x10, 0x65,
	0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a,
	0x6e, 0x0a, 0x0d, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0xb2, 0x98, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73,
	0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x69, 0x6b, 0x72,
	0x6f, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x0c, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a,
	0x76, 0x0a, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0xb2, 0x98, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x69,
	0x6b, 0x72, 0x6f, 0x73, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x4d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x5c, 0x5a, 0x5a, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x2d, 0x64, 0x65, 0x76,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6d, 0x69, 0x6b, 0x72,
	0x6f, 0x73, 0x2d, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x3b, 0x6d, 0x69, 0x6b, 0x72, 0x6f, 0x73, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73,
}

var (
	file_proto_mikros_extensions_proto_rawDescOnce sync.Once
	file_proto_mikros_extensions_proto_rawDescData = file_proto_mikros_extensions_proto_rawDesc
)

func file_proto_mikros_extensions_proto_rawDescGZIP() []byte {
	file_proto_mikros_extensions_proto_rawDescOnce.Do(func() {
		file_proto_mikros_extensions_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_mikros_extensions_proto_rawDescData)
	})
	return file_proto_mikros_extensions_proto_rawDescData
}

var file_proto_mikros_extensions_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_mikros_extensions_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_proto_mikros_extensions_proto_goTypes = []interface{}{
	(AuthorizationMode)(0),                // 0: mikros.extensions.AuthorizationMode
	(FieldValidatorRule)(0),               // 1: mikros.extensions.FieldValidatorRule
	(NamingMode)(0),                       // 2: mikros.extensions.NamingMode
	(*MikrosServiceExtensions)(nil),       // 3: mikros.extensions.MikrosServiceExtensions
	(*HttpAuthorizationExtensions)(nil),   // 4: mikros.extensions.HttpAuthorizationExtensions
	(*MikrosMethodExtensions)(nil),        // 5: mikros.extensions.MikrosMethodExtensions
	(*HttpMethodExtensions)(nil),          // 6: mikros.extensions.HttpMethodExtensions
	(*MikrosEnumExtensions)(nil),          // 7: mikros.extensions.MikrosEnumExtensions
	(*EnumApiExtensions)(nil),             // 8: mikros.extensions.EnumApiExtensions
	(*MikrosEnumValueExtensions)(nil),     // 9: mikros.extensions.MikrosEnumValueExtensions
	(*EnumEntry)(nil),                     // 10: mikros.extensions.EnumEntry
	(*MikrosFieldExtensions)(nil),         // 11: mikros.extensions.MikrosFieldExtensions
	(*FieldDomainOptions)(nil),            // 12: mikros.extensions.FieldDomainOptions
	(*FieldDomainStructTag)(nil),          // 13: mikros.extensions.FieldDomainStructTag
	(*FieldDatabaseOptions)(nil),          // 14: mikros.extensions.FieldDatabaseOptions
	(*FieldInboundOptions)(nil),           // 15: mikros.extensions.FieldInboundOptions
	(*FieldOutboundOptions)(nil),          // 16: mikros.extensions.FieldOutboundOptions
	(*OutboundBitflagField)(nil),          // 17: mikros.extensions.OutboundBitflagField
	(*FieldValidateOptions)(nil),          // 18: mikros.extensions.FieldValidateOptions
	(*FieldTestingOptions)(nil),           // 19: mikros.extensions.FieldTestingOptions
	(*MikrosMessageExtensions)(nil),       // 20: mikros.extensions.MikrosMessageExtensions
	(*MessageDomainExtensions)(nil),       // 21: mikros.extensions.MessageDomainExtensions
	(*MessageCustomApiExtensions)(nil),    // 22: mikros.extensions.MessageCustomApiExtensions
	(*CustomFunctionExtensions)(nil),      // 23: mikros.extensions.CustomFunctionExtensions
	(*MikrosCustomImport)(nil),            // 24: mikros.extensions.MikrosCustomImport
	(*MessageInboundExtensions)(nil),      // 25: mikros.extensions.MessageInboundExtensions
	(*MessageOutboundExtensions)(nil),     // 26: mikros.extensions.MessageOutboundExtensions
	(*MessageWireInputExtensions)(nil),    // 27: mikros.extensions.MessageWireInputExtensions
	(*descriptorpb.ServiceOptions)(nil),   // 28: google.protobuf.ServiceOptions
	(*descriptorpb.MethodOptions)(nil),    // 29: google.protobuf.MethodOptions
	(*descriptorpb.EnumOptions)(nil),      // 30: google.protobuf.EnumOptions
	(*descriptorpb.EnumValueOptions)(nil), // 31: google.protobuf.EnumValueOptions
	(*descriptorpb.FieldOptions)(nil),     // 32: google.protobuf.FieldOptions
	(*descriptorpb.MessageOptions)(nil),   // 33: google.protobuf.MessageOptions
}
var file_proto_mikros_extensions_proto_depIdxs = []int32{
	4,  // 0: mikros.extensions.MikrosServiceExtensions.authorization:type_name -> mikros.extensions.HttpAuthorizationExtensions
	0,  // 1: mikros.extensions.HttpAuthorizationExtensions.mode:type_name -> mikros.extensions.AuthorizationMode
	6,  // 2: mikros.extensions.MikrosMethodExtensions.http:type_name -> mikros.extensions.HttpMethodExtensions
	8,  // 3: mikros.extensions.MikrosEnumExtensions.api:type_name -> mikros.extensions.EnumApiExtensions
	10, // 4: mikros.extensions.MikrosEnumValueExtensions.entry:type_name -> mikros.extensions.EnumEntry
	12, // 5: mikros.extensions.MikrosFieldExtensions.domain:type_name -> mikros.extensions.FieldDomainOptions
	14, // 6: mikros.extensions.MikrosFieldExtensions.database:type_name -> mikros.extensions.FieldDatabaseOptions
	15, // 7: mikros.extensions.MikrosFieldExtensions.inbound:type_name -> mikros.extensions.FieldInboundOptions
	16, // 8: mikros.extensions.MikrosFieldExtensions.outbound:type_name -> mikros.extensions.FieldOutboundOptions
	18, // 9: mikros.extensions.MikrosFieldExtensions.validate:type_name -> mikros.extensions.FieldValidateOptions
	19, // 10: mikros.extensions.MikrosFieldExtensions.testing:type_name -> mikros.extensions.FieldTestingOptions
	13, // 11: mikros.extensions.FieldDomainOptions.struct_tag:type_name -> mikros.extensions.FieldDomainStructTag
	17, // 12: mikros.extensions.FieldOutboundOptions.bitflag:type_name -> mikros.extensions.OutboundBitflagField
	13, // 13: mikros.extensions.FieldOutboundOptions.struct_tag:type_name -> mikros.extensions.FieldDomainStructTag
	24, // 14: mikros.extensions.FieldOutboundOptions.custom_import:type_name -> mikros.extensions.MikrosCustomImport
	1,  // 15: mikros.extensions.FieldValidateOptions.rule:type_name -> mikros.extensions.FieldValidatorRule
	21, // 16: mikros.extensions.MikrosMessageExtensions.domain:type_name -> mikros.extensions.MessageDomainExtensions
	22, // 17: mikros.extensions.MikrosMessageExtensions.custom_api:type_name -> mikros.extensions.MessageCustomApiExtensions
	25, // 18: mikros.extensions.MikrosMessageExtensions.inbound:type_name -> mikros.extensions.MessageInboundExtensions
	26, // 19: mikros.extensions.MikrosMessageExtensions.outbound:type_name -> mikros.extensions.MessageOutboundExtensions
	27, // 20: mikros.extensions.MikrosMessageExtensions.wire_input:type_name -> mikros.extensions.MessageWireInputExtensions
	2,  // 21: mikros.extensions.MessageDomainExtensions.naming_mode:type_name -> mikros.extensions.NamingMode
	23, // 22: mikros.extensions.MessageCustomApiExtensions.function:type_name -> mikros.extensions.CustomFunctionExtensions
	24, // 23: mikros.extensions.CustomFunctionExtensions.import:type_name -> mikros.extensions.MikrosCustomImport
	2,  // 24: mikros.extensions.MessageInboundExtensions.naming_mode:type_name -> mikros.extensions.NamingMode
	2,  // 25: mikros.extensions.MessageOutboundExtensions.naming_mode:type_name -> mikros.extensions.NamingMode
	28, // 26: mikros.extensions.service_options:extendee -> google.protobuf.ServiceOptions
	29, // 27: mikros.extensions.method_options:extendee -> google.protobuf.MethodOptions
	30, // 28: mikros.extensions.enum_options:extendee -> google.protobuf.EnumOptions
	31, // 29: mikros.extensions.enum_value_options:extendee -> google.protobuf.EnumValueOptions
	32, // 30: mikros.extensions.field_options:extendee -> google.protobuf.FieldOptions
	33, // 31: mikros.extensions.message_options:extendee -> google.protobuf.MessageOptions
	3,  // 32: mikros.extensions.service_options:type_name -> mikros.extensions.MikrosServiceExtensions
	5,  // 33: mikros.extensions.method_options:type_name -> mikros.extensions.MikrosMethodExtensions
	7,  // 34: mikros.extensions.enum_options:type_name -> mikros.extensions.MikrosEnumExtensions
	9,  // 35: mikros.extensions.enum_value_options:type_name -> mikros.extensions.MikrosEnumValueExtensions
	11, // 36: mikros.extensions.field_options:type_name -> mikros.extensions.MikrosFieldExtensions
	20, // 37: mikros.extensions.message_options:type_name -> mikros.extensions.MikrosMessageExtensions
	38, // [38:38] is the sub-list for method output_type
	38, // [38:38] is the sub-list for method input_type
	32, // [32:38] is the sub-list for extension type_name
	26, // [26:32] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_proto_mikros_extensions_proto_init() }
func file_proto_mikros_extensions_proto_init() {
	if File_proto_mikros_extensions_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_mikros_extensions_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MikrosServiceExtensions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mikros_extensions_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpAuthorizationExtensions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mikros_extensions_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MikrosMethodExtensions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mikros_extensions_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpMethodExtensions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mikros_extensions_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MikrosEnumExtensions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mikros_extensions_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumApiExtensions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mikros_extensions_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MikrosEnumValueExtensions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mikros_extensions_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mikros_extensions_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MikrosFieldExtensions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mikros_extensions_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldDomainOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mikros_extensions_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldDomainStructTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mikros_extensions_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldDatabaseOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mikros_extensions_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldInboundOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mikros_extensions_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldOutboundOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mikros_extensions_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutboundBitflagField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mikros_extensions_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldValidateOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mikros_extensions_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldTestingOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mikros_extensions_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MikrosMessageExtensions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mikros_extensions_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageDomainExtensions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mikros_extensions_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageCustomApiExtensions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mikros_extensions_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomFunctionExtensions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mikros_extensions_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MikrosCustomImport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mikros_extensions_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageInboundExtensions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mikros_extensions_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageOutboundExtensions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mikros_extensions_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageWireInputExtensions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_mikros_extensions_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   25,
			NumExtensions: 6,
			NumServices:   0,
		},
		GoTypes:           file_proto_mikros_extensions_proto_goTypes,
		DependencyIndexes: file_proto_mikros_extensions_proto_depIdxs,
		EnumInfos:         file_proto_mikros_extensions_proto_enumTypes,
		MessageInfos:      file_proto_mikros_extensions_proto_msgTypes,
		ExtensionInfos:    file_proto_mikros_extensions_proto_extTypes,
	}.Build()
	File_proto_mikros_extensions_proto = out.File
	file_proto_mikros_extensions_proto_rawDesc = nil
	file_proto_mikros_extensions_proto_goTypes = nil
	file_proto_mikros_extensions_proto_depIdxs = nil
}
